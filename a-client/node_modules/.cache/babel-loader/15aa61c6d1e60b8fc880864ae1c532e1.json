{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dthai/sadness/a-client/src/component/chatComponent/sendContact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport Peer from 'peerjs';\nimport { getCookie } from '../../helpers/auth';\nimport { PeerJS } from '../../userContext'; // This function is use for send and view message\n\nimport ChatCouple from \"./miniChatCom/chatCouple\";\nimport ChatGroup from './miniChatCom/chatGroup';\n\nfunction SendContact(props) {\n  _s();\n\n  const {\n    peer,\n    setPeer\n  } = useContext(PeerJS);\n  const [open, setOpen] = useState(true);\n  let id = getCookie().token;\n  useEffect(() => {\n    setOpen(true);\n\n    let newNull = () => {\n      setPeer(null);\n      peer.destroy();\n    };\n\n    let createPeer = () => {\n      var peerJS = new Peer(id, {\n        host: \"/\",\n        port: 2704,\n        path: \"/peerjs\"\n      });\n      return peerJS;\n    };\n\n    newNull();\n    let peerJS = createPeer();\n    peerJS && setPeer(peerJS);\n    setOpen(false); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.id]);\n  useEffect(() => {\n    peer[\"_open\"] === true ? setOpen(false) : setOpen(true);\n  }, peer);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(open), open !== true ? props.id[props.id.length - 1] === \"g\" ? /*#__PURE__*/_jsxDEV(ChatGroup, {\n      onClick: value => props.onClick(value),\n      peerJS: peer,\n      id: props.id,\n      socket: props.socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(ChatCouple, {\n      onClick: value => props.onClick(value),\n      peerJS: peer,\n      id: props.id,\n      socket: props.socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this) : console.log(\"l\")]\n  }, void 0, true);\n}\n\n_s(SendContact, \"aEWyu1CUh0qRc/HLrsBX9Uj4FnQ=\");\n\n_c = SendContact;\nexport default SendContact;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendContact\");","map":{"version":3,"sources":["/home/dthai/sadness/a-client/src/component/chatComponent/sendContact.js"],"names":["React","useContext","useEffect","useState","Peer","getCookie","PeerJS","ChatCouple","ChatGroup","SendContact","props","peer","setPeer","open","setOpen","id","token","newNull","destroy","createPeer","peerJS","host","port","path","console","log","length","value","onClick","socket"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBX,UAAU,CAACK,MAAD,CAApC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;AACA,MAAIY,EAAE,GAAGV,SAAS,GAAGW,KAArB;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO,CAAC,IAAD,CAAP;;AACA,QAAIG,OAAO,GAAG,MAAM;AAChBL,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAD,MAAAA,IAAI,CAACO,OAAL;AACH,KAHD;;AAIA,QAAIC,UAAU,GAAG,MAAM;AACnB,UAAIC,MAAM,GAAG,IAAIhB,IAAJ,CAASW,EAAT,EAAa;AACtBM,QAAAA,IAAI,EAAE,GADgB;AAEtBC,QAAAA,IAAI,EAAE,IAFgB;AAGtBC,QAAAA,IAAI,EAAE;AAHgB,OAAb,CAAb;AAKA,aAAOH,MAAP;AACH,KAPD;;AAQAH,IAAAA,OAAO;AACP,QAAIG,MAAM,GAAGD,UAAU,EAAvB;AACAC,IAAAA,MAAM,IAAIR,OAAO,CAACQ,MAAD,CAAjB;AACAN,IAAAA,OAAO,CAAC,KAAD,CAAP,CAjBY,CAkBZ;AACH,GAnBQ,EAmBN,CAACJ,KAAK,CAACK,EAAP,CAnBM,CAAT;AAoBAb,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,IAAI,CAAC,OAAD,CAAJ,KAAkB,IAAlB,GAAyBG,OAAO,CAAC,KAAD,CAAhC,GAA0CA,OAAO,CAAC,IAAD,CAAjD;AACH,GAFQ,EAENH,IAFM,CAAT;AAGA,sBACI;AAAA,eACKa,OAAO,CAACC,GAAR,CAAYZ,IAAZ,CADL,EAEKA,IAAI,KAAK,IAAT,GAAgBH,KAAK,CAACK,EAAN,CAASL,KAAK,CAACK,EAAN,CAASW,MAAT,GAAkB,CAA3B,MAAkC,GAAlC,gBACb,QAAC,SAAD;AAAW,MAAA,OAAO,EAAGC,KAAD,IAAWjB,KAAK,CAACkB,OAAN,CAAcD,KAAd,CAA/B;AAAqD,MAAA,MAAM,EAAEhB,IAA7D;AAAmE,MAAA,EAAE,EAAED,KAAK,CAACK,EAA7E;AAAiF,MAAA,MAAM,EAAEL,KAAK,CAACmB;AAA/F;AAAA;AAAA;AAAA;AAAA,YADa,gBAEb,QAAC,UAAD;AAAY,MAAA,OAAO,EAAGF,KAAD,IAAWjB,KAAK,CAACkB,OAAN,CAAcD,KAAd,CAAhC;AAAsD,MAAA,MAAM,EAAEhB,IAA9D;AAAoE,MAAA,EAAE,EAAED,KAAK,CAACK,EAA9E;AAAkF,MAAA,MAAM,EAAEL,KAAK,CAACmB;AAAhG;AAAA;AAAA;AAAA;AAAA,YAFH,GAGGL,OAAO,CAACC,GAAR,CAAY,GAAZ,CALR;AAAA,kBADJ;AAUH;;GAtCQhB,W;;KAAAA,W;AAwCT,eAAeA,WAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\n\nimport Peer from 'peerjs'\nimport { getCookie } from '../../helpers/auth'\nimport { PeerJS } from '../../userContext'\n// This function is use for send and view message\nimport ChatCouple from \"./miniChatCom/chatCouple\"\nimport ChatGroup from './miniChatCom/chatGroup'\n\nfunction SendContact(props) {\n    const { peer, setPeer } = useContext(PeerJS)\n    const [open, setOpen] = useState(true)\n    let id = getCookie().token\n\n    useEffect(() => {\n        setOpen(true)\n        let newNull = () => {\n            setPeer(null)\n            peer.destroy()\n        }\n        let createPeer = () => {\n            var peerJS = new Peer(id, {\n                host: \"/\",\n                port: 2704,\n                path: \"/peerjs\"\n            })\n            return peerJS\n        }\n        newNull()\n        let peerJS = createPeer()\n        peerJS && setPeer(peerJS)\n        setOpen(false)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.id])\n    useEffect(() => {\n        peer[\"_open\"] === true ? setOpen(false) : setOpen(true)\n    }, peer)\n    return (\n        <>\n            {console.log(open)}\n            {open !== true ? props.id[props.id.length - 1] === \"g\" ?\n                <ChatGroup onClick={(value) => props.onClick(value)} peerJS={peer} id={props.id} socket={props.socket} /> :\n                <ChatCouple onClick={(value) => props.onClick(value)} peerJS={peer} id={props.id} socket={props.socket} /> :\n                console.log(\"l\")\n            }\n        </>\n    )\n}\n\nexport default SendContact"]},"metadata":{},"sourceType":"module"}