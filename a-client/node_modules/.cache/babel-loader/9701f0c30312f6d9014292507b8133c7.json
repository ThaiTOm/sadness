{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/duythai/Developer/sadness/a-client/src/component/chatComponent/main_page.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport Chat from './chat.js';\nimport ContactContain from './miniChatCom/contactContain.js';\nimport SendContact from './sendContact.js';\nimport { HeaderPage, NavbarRight } from '../../helpers/news.js';\nimport socketApp from '../../socket.js';\nimport { MessageList } from '../../userContext.js';\nvar socket = socketApp.getSocket();\n\nfunction Main_page() {\n  _s();\n\n  const {\n    listMessage,\n    setListMessage\n  } = useContext(MessageList);\n  const [room, setRoom] = useState(\"\");\n  const [change, setChange] = useState(null); //value contain Rooms\n\n  const [name, setName] = useState(\"Recal\"); // user contain 2 user \n\n  const [user, setUser] = useState(\"\");\n  useEffect(() => {\n    let func = () => {\n      let arr = [...listMessage];\n      console.log(arr);\n      socket.on(\"message\", msgs => {\n        if (msgs.type === \"message\") {\n          for (let i = 0; i < arr.length; i++) {\n            console.log(arr[i].idRoom, i, msgs.idRoom);\n\n            if (arr[i].idRoom === msgs.idRoom && i !== 0) {\n              arr.splice(i, 1);\n              arr.unshift(msgs);\n              console.log(arr);\n              setChange(null);\n              return setListMessage(arr);\n            }\n          } // if the position of all value is not change\n\n\n          return setChange(\"abc\");\n        }\n      });\n    };\n\n    listMessage ? func() : console.log();\n  }, [listMessage, setListMessage]);\n\n  const hanldeSetRoom = value => {\n    let id = value.split(\",\");\n    setRoom(id[0]);\n    setUser(id[1]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_page_auth\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(NavbarRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), // id room id not exists than render chat component\n      room ? /*#__PURE__*/_jsxDEV(SendContact, {\n        onClick: value => hanldeSetRoom(value),\n        id: room,\n        name: value => setName(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact\",\n        children: // if value have then we can use this \n        listMessage && listMessage.length > 0 ? listMessage.map((val, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [console.log(val), /*#__PURE__*/_jsxDEV(ContactContain, {\n            change: change,\n            onClick: value => hanldeSetRoom(value),\n            message: val.data,\n            users: val.user,\n            idRoom: val.idRoom,\n            target: room,\n            nread: val.nread\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 93\n        }, this)) : console.log()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main_page, \"5dxvLPB4d4Oj/CZBcCZgRjPZRvk=\");\n\n_c = Main_page;\nexport default Main_page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main_page\");","map":{"version":3,"sources":["/home/duythai/Developer/sadness/a-client/src/component/chatComponent/main_page.js"],"names":["React","useState","useEffect","useContext","Chat","ContactContain","SendContact","HeaderPage","NavbarRight","socketApp","MessageList","socket","getSocket","Main_page","listMessage","setListMessage","room","setRoom","change","setChange","name","setName","user","setUser","func","arr","console","log","on","msgs","type","i","length","idRoom","splice","unshift","hanldeSetRoom","value","id","split","map","val","data","nread"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport Chat from './chat.js';\nimport ContactContain from './miniChatCom/contactContain.js';\nimport SendContact from './sendContact.js';\nimport { HeaderPage, NavbarRight } from '../../helpers/news.js';\nimport socketApp from '../../socket.js';\nimport { MessageList } from '../../userContext.js';\nvar socket = socketApp.getSocket();\n\nfunction Main_page() {\n    const { listMessage, setListMessage } = useContext(MessageList)\n    const [room, setRoom] = useState(\"\");\n    const [change, setChange] = useState(null)\n    //value contain Rooms\n    const [name, setName] = useState(\"Recal\")\n    // user contain 2 user \n    const [user, setUser] = useState(\"\")\n\n    useEffect(() => {\n        let func = () => {\n            let arr = [...listMessage]\n            console.log(arr)\n            socket.on(\"message\", msgs => {\n                if (msgs.type === \"message\") {\n                    for (let i = 0; i < arr.length; i++) {\n                        console.log(arr[i].idRoom, i, msgs.idRoom)\n                        if (arr[i].idRoom === msgs.idRoom && i !== 0) {\n                            arr.splice(i, 1)\n                            arr.unshift(msgs)\n                            console.log(arr)\n                            setChange(null)\n                            return setListMessage(arr)\n                        }\n                    }\n                    // if the position of all value is not change\n                    return setChange(\"abc\")\n                }\n            })\n        }\n        listMessage ? func() : console.log()\n    }, [listMessage, setListMessage])\n    const hanldeSetRoom = value => {\n        let id = value.split(\",\")\n        setRoom(id[0])\n        setUser(id[1])\n    }\n    return (\n        <div className=\"main_page_auth\">\n            <HeaderPage />\n            <div className=\"container\">\n                <NavbarRight />\n                {\n                    // id room id not exists than render chat component\n                    room ?\n                        <SendContact\n                            onClick={(value) => hanldeSetRoom(value)}\n                            id={room}\n                            name={(value) => setName(value)}\n                        /> :\n                        <Chat />\n                }\n                <div className=\"contact\">\n                    {\n                        // if value have then we can use this \n                        listMessage && listMessage.length > 0 ? listMessage.map((val, i) => <div key={i}>\n                            {console.log(val)}\n                            <ContactContain\n                                change={change}\n                                onClick={(value) => hanldeSetRoom(value)}\n                                message={val.data}\n                                users={val.user}\n                                idRoom={val.idRoom}\n                                target={room}\n                                nread={val.nread}\n                            />\n                        </div>) : console.log()\n                    }\n                </div>\n            </div>\n        </div >\n    )\n}\n\nexport default Main_page"]},"metadata":{},"sourceType":"module"}