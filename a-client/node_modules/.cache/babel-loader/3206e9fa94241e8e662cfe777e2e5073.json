{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/duythai/Developer/sadness/a-client/src/component/chatComponent/main_page.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Chat from './chat.js';\nimport { useHistory } from 'react-router-dom';\nimport ContactContain from './miniChatCom/contactContain.js';\nimport { getCookie } from '../../helpers/auth.js';\nimport axios from \"axios\";\nimport SendContact from './sendContact.js';\nimport { HeaderPage, NavbarRight } from '../../helpers/news.js';\nimport socketApp from '../../socket.js';\nvar socket = socketApp.getSocket();\n\nfunction Main_page() {\n  _s();\n\n  const history = useHistory();\n  const [room, setRoom] = useState(\"\");\n  const id = getCookie().token;\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(10); //value contain Rooms\n\n  const [value, setValue] = useState(null);\n  const [name, setName] = useState(\"Recal\"); // user contain 2 user \n\n  const [user, setUser] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n  useEffect(() => {\n    axios.post(\"http://localhost:2704/api/msgC/contactL?start=\" + start + \"&end=\" + end, {\n      id\n    }).then(res => {\n      if (res.data.message) {\n        history.push(\"/report\");\n      } else {\n        setValue(res.data);\n      }\n    }).catch(err => {});\n  }, [start]);\n  useEffect(() => {\n    let func = async () => {\n      let data = value;\n      socket.on(\"message\", msgs => {\n        if (msgs.type === \"message\") {\n          let arr = [...data];\n\n          for (let i = 0; i < arr.length; i++) {\n            if (arr[i].idRoom === msgs.idRoom) {\n              arr.splice(i, 1);\n              arr.unshift(msgs);\n              setValue(arr);\n            }\n          }\n        }\n      });\n    };\n\n    value ? func() : console.log();\n  });\n\n  const hanldeSetRoom = value => {\n    let id = value.split(\",\");\n    setRoom(id[0]);\n    setUser(id[1]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_page_auth\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(NavbarRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), // id room id not exists than render chat component\n      room ? /*#__PURE__*/_jsxDEV(SendContact, {\n        onClick: value => hanldeSetRoom(value),\n        id: room,\n        name: value => setName(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact\",\n        children: // if value have then we can use this \n        value ? value.map((val, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ContactContain, {\n            msg: msg,\n            onClick: value => hanldeSetRoom(value),\n            message: val.data,\n            users: val.user,\n            idRoom: val.idRoom,\n            target: room\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 55\n        }, this)) : console.log()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main_page, \"54sTicymX+YOkdcHjPf9ccQ1GAQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Main_page;\nexport default Main_page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main_page\");","map":{"version":3,"sources":["/home/duythai/Developer/sadness/a-client/src/component/chatComponent/main_page.js"],"names":["React","useState","useEffect","Chat","useHistory","ContactContain","getCookie","axios","SendContact","HeaderPage","NavbarRight","socketApp","socket","getSocket","Main_page","history","room","setRoom","id","token","start","setStart","end","setEnd","value","setValue","name","setName","user","setUser","msg","setMsg","post","then","res","data","message","push","catch","err","func","on","msgs","type","arr","i","length","idRoom","splice","unshift","console","log","hanldeSetRoom","split","map","val"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Chat from './chat.js';\nimport { useHistory } from 'react-router-dom';\nimport ContactContain from './miniChatCom/contactContain.js';\nimport { getCookie } from '../../helpers/auth.js';\nimport axios from \"axios\"\nimport SendContact from './sendContact.js';\nimport { HeaderPage, NavbarRight } from '../../helpers/news.js';\nimport socketApp from '../../socket.js';\nvar socket = socketApp.getSocket();\n\nfunction Main_page() {\n    const history = useHistory()\n    const [room, setRoom] = useState(\"\");\n    const id = getCookie().token;\n    const [start, setStart] = useState(0);\n    const [end, setEnd] = useState(10);\n    //value contain Rooms\n    const [value, setValue] = useState(null);\n    const [name, setName] = useState(\"Recal\")\n    // user contain 2 user \n    const [user, setUser] = useState(\"\")\n    const [msg, setMsg] = useState(\"\")\n\n    useEffect(() => {\n        axios.post(\"http://localhost:2704/api/msgC/contactL?start=\" + start + \"&end=\" + end, { id })\n            .then(res => {\n                if (res.data.message) {\n                    history.push(\"/report\")\n                } else {\n                    setValue(res.data)\n                }\n            }).catch(err => {\n            })\n\n    }, [start])\n\n    useEffect(() => {\n        let func = async () => {\n            let data = value\n            socket.on(\"message\", msgs => {\n                if (msgs.type === \"message\") {\n                    let arr = [...data]\n                    for (let i = 0; i < arr.length; i++) {\n                        if (arr[i].idRoom === msgs.idRoom) {\n                            arr.splice(i, 1)\n                            arr.unshift(msgs)\n                            setValue(arr)\n                        }\n                    }\n                }\n            })\n        }\n        value ? func() : console.log()\n    })\n    const hanldeSetRoom = value => {\n        let id = value.split(\",\")\n        setRoom(id[0])\n        setUser(id[1])\n    }\n\n    return (\n        <div className=\"main_page_auth\">\n            <HeaderPage />\n            <div className=\"container\">\n                <NavbarRight />\n                {\n                    // id room id not exists than render chat component\n                    room ? <SendContact\n                        onClick={(value) => hanldeSetRoom(value)}\n                        id={room}\n                        name={(value) => setName(value)}\n                    /> : <Chat />\n                }\n                <div className=\"contact\" >\n                    {\n                        // if value have then we can use this \n                        value ? value.map((val, i) => <div key={i}>\n                            <ContactContain\n                                msg={msg}\n                                onClick={(value) => hanldeSetRoom(value)}\n                                message={val.data}\n                                users={val.user}\n                                idRoom={val.idRoom}\n                                target={room}\n                            />\n                        </div>)\n                            : console.log()\n                    }\n                </div>\n            </div>\n        </div >\n    )\n}\n\nexport default Main_page"]},"metadata":{},"sourceType":"module"}