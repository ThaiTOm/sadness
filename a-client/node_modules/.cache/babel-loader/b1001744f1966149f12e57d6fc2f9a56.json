{"ast":null,"code":"let db;\nlet dbReq = indexedDB.open('myDatabase', 3);\n\ndbReq.onupgradeneeded = function (event) {\n  // Set the db variable to our database so we can use it!  \n  db = event.target.result; // Create an object store named notes. Object stores\n  // in databases are where data are stored.\n\n  let notes = db.createObjectStore('notes', {\n    autoIncrement: true,\n    keyPath: \"id\"\n  });\n  addData(db, \"duythai\", \"thai123\");\n\n  notes.onerror = e => {\n    db.deleteObjectStore(\"notes\");\n    db.createObjectStore('notes', {\n      autoIncrement: true,\n      keyPath: \"id\"\n    });\n  };\n};\n\ndbReq.onsuccess = function (event) {\n  db = event.target.result;\n};\n\ndbReq.onerror = function (event) {\n  alert('error opening database ' + event.target.errorCode);\n};\n\nexport const addData = (db, id, value) => {\n  let tx = db.transaction(['notes'], 'readwrite');\n  let store = tx.objectStore('notes');\n  let req = store.add(value);\n\n  req.onsuccess = e => {\n    console.log(\"succesFull\");\n  };\n\n  req.onerror = e => {\n    console.log(\"failure\");\n  };\n};\nexport const deleteData = id => {\n  let tx = db.transaction(['app-view-story'], 'readwrite');\n  let store = tx.objectStore('app-view-story');\n  let req = store.delete(id);\n\n  req.onerror = e => {\n    console.log(\"Does not exists\");\n  };\n};","map":{"version":3,"sources":["/home/dthai/sadness/a-client/src/helpers/indexeddb.js"],"names":["db","dbReq","indexedDB","open","onupgradeneeded","event","target","result","notes","createObjectStore","autoIncrement","keyPath","addData","onerror","e","deleteObjectStore","onsuccess","alert","errorCode","id","value","tx","transaction","store","objectStore","req","add","console","log","deleteData","delete"],"mappings":"AAAA,IAAIA,EAAJ;AACA,IAAIC,KAAK,GAAGC,SAAS,CAACC,IAAV,CAAe,YAAf,EAA6B,CAA7B,CAAZ;;AAGAF,KAAK,CAACG,eAAN,GAAwB,UAAUC,KAAV,EAAiB;AACrC;AACAL,EAAAA,EAAE,GAAGK,KAAK,CAACC,MAAN,CAAaC,MAAlB,CAFqC,CAIrC;AACA;;AACA,MAAIC,KAAK,GAAGR,EAAE,CAACS,iBAAH,CAAqB,OAArB,EAA8B;AAAEC,IAAAA,aAAa,EAAE,IAAjB;AAAuBC,IAAAA,OAAO,EAAE;AAAhC,GAA9B,CAAZ;AACAC,EAAAA,OAAO,CAACZ,EAAD,EAAK,SAAL,EAAgB,SAAhB,CAAP;;AACAQ,EAAAA,KAAK,CAACK,OAAN,GAAiBC,CAAD,IAAO;AACnBd,IAAAA,EAAE,CAACe,iBAAH,CAAqB,OAArB;AACAf,IAAAA,EAAE,CAACS,iBAAH,CAAqB,OAArB,EAA8B;AAAEC,MAAAA,aAAa,EAAE,IAAjB;AAAuBC,MAAAA,OAAO,EAAE;AAAhC,KAA9B;AACH,GAHD;AAIH,CAZD;;AAaAV,KAAK,CAACe,SAAN,GAAkB,UAAUX,KAAV,EAAiB;AAC/BL,EAAAA,EAAE,GAAGK,KAAK,CAACC,MAAN,CAAaC,MAAlB;AACH,CAFD;;AAIAN,KAAK,CAACY,OAAN,GAAgB,UAAUR,KAAV,EAAiB;AAC7BY,EAAAA,KAAK,CAAC,4BAA4BZ,KAAK,CAACC,MAAN,CAAaY,SAA1C,CAAL;AACH,CAFD;;AAGA,OAAO,MAAMN,OAAO,GAAG,CAACZ,EAAD,EAAKmB,EAAL,EAASC,KAAT,KAAmB;AACtC,MAAIC,EAAE,GAAGrB,EAAE,CAACsB,WAAH,CAAe,CAAC,OAAD,CAAf,EAA0B,WAA1B,CAAT;AACA,MAAIC,KAAK,GAAGF,EAAE,CAACG,WAAH,CAAe,OAAf,CAAZ;AACA,MAAIC,GAAG,GAAGF,KAAK,CAACG,GAAN,CAAUN,KAAV,CAAV;;AACAK,EAAAA,GAAG,CAACT,SAAJ,GAAiBF,CAAD,IAAO;AACnBa,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,GAFD;;AAGAH,EAAAA,GAAG,CAACZ,OAAJ,GAAeC,CAAD,IAAO;AACjBa,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,GAFD;AAGH,CAVM;AAWP,OAAO,MAAMC,UAAU,GAAIV,EAAD,IAAQ;AAC9B,MAAIE,EAAE,GAAGrB,EAAE,CAACsB,WAAH,CAAe,CAAC,gBAAD,CAAf,EAAmC,WAAnC,CAAT;AACA,MAAIC,KAAK,GAAGF,EAAE,CAACG,WAAH,CAAe,gBAAf,CAAZ;AACA,MAAIC,GAAG,GAAGF,KAAK,CAACO,MAAN,CAAaX,EAAb,CAAV;;AACAM,EAAAA,GAAG,CAACZ,OAAJ,GAAeC,CAAD,IAAO;AACjBa,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,GAFD;AAGH,CAPM","sourcesContent":["let db;\nlet dbReq = indexedDB.open('myDatabase', 3);\n\n\ndbReq.onupgradeneeded = function (event) {\n    // Set the db variable to our database so we can use it!  \n    db = event.target.result;\n\n    // Create an object store named notes. Object stores\n    // in databases are where data are stored.\n    let notes = db.createObjectStore('notes', { autoIncrement: true, keyPath: \"id\" });\n    addData(db, \"duythai\", \"thai123\")\n    notes.onerror = (e) => {\n        db.deleteObjectStore(\"notes\")\n        db.createObjectStore('notes', { autoIncrement: true, keyPath: \"id\" });\n    }\n}\ndbReq.onsuccess = function (event) {\n    db = event.target.result;\n}\n\ndbReq.onerror = function (event) {\n    alert('error opening database ' + event.target.errorCode);\n}\nexport const addData = (db, id, value) => {\n    let tx = db.transaction(['notes'], 'readwrite');\n    let store = tx.objectStore('notes');\n    let req = store.add(value)\n    req.onsuccess = (e) => {\n        console.log(\"succesFull\")\n    }\n    req.onerror = (e) => {\n        console.log(\"failure\")\n    }\n}\nexport const deleteData = (id) => {\n    let tx = db.transaction(['app-view-story'], 'readwrite');\n    let store = tx.objectStore('app-view-story');\n    let req = store.delete(id)\n    req.onerror = (e) => {\n        console.log(\"Does not exists\")\n    }\n}\n"]},"metadata":{},"sourceType":"module"}