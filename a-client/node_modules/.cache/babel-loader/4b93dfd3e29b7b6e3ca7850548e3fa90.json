{"ast":null,"code":"exports.setVolumn = async ({\n  audio,\n  volumn\n}) => {\n  let arr = [];\n\n  for await (let data of audio) {\n    // copy old object\n    let value = Object.assign({}, data.stream.props, {\n      seleted: false,\n      writeable: true\n    });\n    let old = Object.assign({}, data.stream, {\n      writeable: true,\n      seleted: false\n    });\n    value.muted = !volumn; // delete specific key\n\n    delete value[\"seleted\"];\n    delete value[\"writeable\"];\n    old.props = value;\n    delete old[\"seleted\"];\n    delete old[\"writeable\"]; // create new object\n    // to handle new data\n\n    let obj = {\n      stream: old,\n      audio: data.audio,\n      mic: false\n    };\n    arr.push(obj);\n  }\n\n  return arr;\n};","map":{"version":3,"sources":["/home/dthai/sadness/a-client/src/helpers/main/PeerMany.js"],"names":["exports","setVolumn","audio","volumn","arr","data","value","Object","assign","stream","props","seleted","writeable","old","muted","obj","mic","push"],"mappings":"AAAAA,OAAO,CAACC,SAAR,GAAoB,OAAO;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAP,KAA6B;AAC7C,MAAIC,GAAG,GAAG,EAAV;;AACA,aAAW,IAAIC,IAAf,IAAuBH,KAAvB,EAA8B;AAC1B;AACA,QAAII,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,IAAI,CAACI,MAAL,CAAYC,KAA9B,EAAqC;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAArC,CAAZ;AACA,QAAIC,GAAG,GAAGN,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,IAAI,CAACI,MAAvB,EAA+B;AAAEG,MAAAA,SAAS,EAAE,IAAb;AAAmBD,MAAAA,OAAO,EAAE;AAA5B,KAA/B,CAAV;AACAL,IAAAA,KAAK,CAACQ,KAAN,GAAc,CAACX,MAAf,CAJ0B,CAK1B;;AACA,WAAOG,KAAK,CAAC,SAAD,CAAZ;AACA,WAAOA,KAAK,CAAC,WAAD,CAAZ;AACAO,IAAAA,GAAG,CAACH,KAAJ,GAAYJ,KAAZ;AACA,WAAOO,GAAG,CAAC,SAAD,CAAV;AACA,WAAOA,GAAG,CAAC,WAAD,CAAV,CAV0B,CAW1B;AACA;;AACA,QAAIE,GAAG,GAAG;AACNN,MAAAA,MAAM,EAAEI,GADF;AAENX,MAAAA,KAAK,EAAEG,IAAI,CAACH,KAFN;AAGNc,MAAAA,GAAG,EAAE;AAHC,KAAV;AAKAZ,IAAAA,GAAG,CAACa,IAAJ,CAASF,GAAT;AACH;;AACD,SAAOX,GAAP;AACH,CAvBD","sourcesContent":["exports.setVolumn = async ({ audio, volumn }) => {\n    let arr = []\n    for await (let data of audio) {\n        // copy old object\n        let value = Object.assign({}, data.stream.props, { seleted: false, writeable: true })\n        let old = Object.assign({}, data.stream, { writeable: true, seleted: false })\n        value.muted = !volumn\n        // delete specific key\n        delete value[\"seleted\"]\n        delete value[\"writeable\"]\n        old.props = value\n        delete old[\"seleted\"]\n        delete old[\"writeable\"]\n        // create new object\n        // to handle new data\n        let obj = {\n            stream: old,\n            audio: data.audio,\n            mic: false\n        }\n        arr.push(obj)\n    }\n    return arr\n}"]},"metadata":{},"sourceType":"module"}