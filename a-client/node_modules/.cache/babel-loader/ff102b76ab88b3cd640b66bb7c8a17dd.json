{"ast":null,"code":"var _classCallCheck = require(\"/home/duythai/Developer/sadness/a-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/duythai/Developer/sadness/a-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"/home/duythai/Developer/sadness/a-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _get = require(\"/home/duythai/Developer/sadness/a-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/home/duythai/Developer/sadness/a-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/duythai/Developer/sadness/a-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/duythai/Developer/sadness/a-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Polling = require(\"./polling\");\n\nvar globalThis = require(\"../globalThis\");\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n/**\n * Noop.\n */\n\nfunction empty() {}\n\nvar JSONPPolling = /*#__PURE__*/function (_Polling) {\n  \"use strict\";\n\n  _inherits(JSONPPolling, _Polling);\n\n  var _super = _createSuper(JSONPPolling);\n\n  /**\n   * JSONP Polling constructor.\n   *\n   * @param {Object} opts.\n   * @api public\n   */\n  function JSONPPolling(opts) {\n    var _this;\n\n    _classCallCheck(this, JSONPPolling);\n\n    _this = _super.call(this, opts);\n    _this.query = _this.query || {}; // define global callbacks array if not present\n    // we do this here (lazily) to avoid unneeded global pollution\n\n    if (!callbacks) {\n      // we need to consider multiple engines in the same page\n      callbacks = globalThis.___eio = globalThis.___eio || [];\n    } // callback identifier\n\n\n    _this.index = callbacks.length; // add callback to jsonp global\n\n    var self = _assertThisInitialized(_this);\n\n    callbacks.push(function (msg) {\n      self.onData(msg);\n    }); // append to query string\n\n    _this.query.j = _this.index; // prevent spurious errors from being emitted when the window is unloaded\n\n    if (typeof addEventListener === \"function\") {\n      addEventListener(\"beforeunload\", function () {\n        if (self.script) self.script.onerror = empty;\n      }, false);\n    }\n\n    return _this;\n  }\n  /**\n   * JSONP only supports binary as base64 encoded strings\n   */\n\n\n  _createClass(JSONPPolling, [{\n    key: \"doClose\",\n\n    /**\n     * Closes the socket.\n     *\n     * @api private\n     */\n    value: function doClose() {\n      if (this.script) {\n        this.script.parentNode.removeChild(this.script);\n        this.script = null;\n      }\n\n      if (this.form) {\n        this.form.parentNode.removeChild(this.form);\n        this.form = null;\n        this.iframe = null;\n      }\n\n      _get(_getPrototypeOf(JSONPPolling.prototype), \"doClose\", this).call(this);\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n\n  }, {\n    key: \"doPoll\",\n    value: function doPoll() {\n      var self = this;\n      var script = document.createElement(\"script\");\n\n      if (this.script) {\n        this.script.parentNode.removeChild(this.script);\n        this.script = null;\n      }\n\n      script.async = true;\n      script.src = this.uri();\n\n      script.onerror = function (e) {\n        self.onError(\"jsonp poll error\", e);\n      };\n\n      var insertAt = document.getElementsByTagName(\"script\")[0];\n\n      if (insertAt) {\n        insertAt.parentNode.insertBefore(script, insertAt);\n      } else {\n        (document.head || document.body).appendChild(script);\n      }\n\n      this.script = script;\n      var isUAgecko = \"undefined\" !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n      if (isUAgecko) {\n        setTimeout(function () {\n          var iframe = document.createElement(\"iframe\");\n          document.body.appendChild(iframe);\n          document.body.removeChild(iframe);\n        }, 100);\n      }\n    }\n    /**\n     * Writes with a hidden iframe.\n     *\n     * @param {String} data to send\n     * @param {Function} called upon flush.\n     * @api private\n     */\n\n  }, {\n    key: \"doWrite\",\n    value: function doWrite(data, fn) {\n      var self = this;\n      var iframe;\n\n      if (!this.form) {\n        var form = document.createElement(\"form\");\n        var area = document.createElement(\"textarea\");\n        var id = this.iframeId = \"eio_iframe_\" + this.index;\n        form.className = \"socketio\";\n        form.style.position = \"absolute\";\n        form.style.top = \"-1000px\";\n        form.style.left = \"-1000px\";\n        form.target = id;\n        form.method = \"POST\";\n        form.setAttribute(\"accept-charset\", \"utf-8\");\n        area.name = \"d\";\n        form.appendChild(area);\n        document.body.appendChild(form);\n        this.form = form;\n        this.area = area;\n      }\n\n      this.form.action = this.uri();\n\n      function complete() {\n        initIframe();\n        fn();\n      }\n\n      function initIframe() {\n        if (self.iframe) {\n          try {\n            self.form.removeChild(self.iframe);\n          } catch (e) {\n            self.onError(\"jsonp polling iframe removal error\", e);\n          }\n        }\n\n        try {\n          // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n          var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n          iframe = document.createElement(html);\n        } catch (e) {\n          iframe = document.createElement(\"iframe\");\n          iframe.name = self.iframeId;\n          iframe.src = \"javascript:0\";\n        }\n\n        iframe.id = self.iframeId;\n        self.form.appendChild(iframe);\n        self.iframe = iframe;\n      }\n\n      initIframe(); // escape \\n to prevent it from being converted into \\r\\n by some UAs\n      // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n\n      data = data.replace(rEscapedNewline, \"\\\\\\n\");\n      this.area.value = data.replace(rNewline, \"\\\\n\");\n\n      try {\n        this.form.submit();\n      } catch (e) {}\n\n      if (this.iframe.attachEvent) {\n        this.iframe.onreadystatechange = function () {\n          if (self.iframe.readyState === \"complete\") {\n            complete();\n          }\n        };\n      } else {\n        this.iframe.onload = complete;\n      }\n    }\n  }, {\n    key: \"supportsBinary\",\n    get: function get() {\n      return false;\n    }\n  }]);\n\n  return JSONPPolling;\n}(Polling);\n\nmodule.exports = JSONPPolling;","map":{"version":3,"sources":["/home/duythai/Developer/sadness/a-client/node_modules/engine.io-client/lib/transports/polling-jsonp.js"],"names":["Polling","require","globalThis","rNewline","rEscapedNewline","callbacks","empty","JSONPPolling","opts","query","___eio","index","length","self","push","msg","onData","j","addEventListener","script","onerror","parentNode","removeChild","form","iframe","document","createElement","async","src","uri","e","onError","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","isUAgecko","navigator","test","userAgent","setTimeout","data","fn","area","id","iframeId","className","style","position","top","left","target","method","setAttribute","name","action","complete","initIframe","html","replace","value","submit","attachEvent","onreadystatechange","readyState","onload","module","exports"],"mappings":";;;;;;;;;;;;;;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAME,QAAQ,GAAG,KAAjB;AACA,IAAMC,eAAe,GAAG,MAAxB;AAEA;AACA;AACA;;AAEA,IAAIC,SAAJ;AAEA;AACA;AACA;;AAEA,SAASC,KAAT,GAAiB,CAAE;;IAEbC,Y;;;;;;;AACJ;AACF;AACA;AACA;AACA;AACA;AACE,wBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,IAAN;AAEA,UAAKC,KAAL,GAAa,MAAKA,KAAL,IAAc,EAA3B,CAHgB,CAKhB;AACA;;AACA,QAAI,CAACJ,SAAL,EAAgB;AACd;AACAA,MAAAA,SAAS,GAAGH,UAAU,CAACQ,MAAX,GAAoBR,UAAU,CAACQ,MAAX,IAAqB,EAArD;AACD,KAVe,CAYhB;;;AACA,UAAKC,KAAL,GAAaN,SAAS,CAACO,MAAvB,CAbgB,CAehB;;AACA,QAAMC,IAAI,gCAAV;;AACAR,IAAAA,SAAS,CAACS,IAAV,CAAe,UAASC,GAAT,EAAc;AAC3BF,MAAAA,IAAI,CAACG,MAAL,CAAYD,GAAZ;AACD,KAFD,EAjBgB,CAqBhB;;AACA,UAAKN,KAAL,CAAWQ,CAAX,GAAe,MAAKN,KAApB,CAtBgB,CAwBhB;;AACA,QAAI,OAAOO,gBAAP,KAA4B,UAAhC,EAA4C;AAC1CA,MAAAA,gBAAgB,CACd,cADc,EAEd,YAAW;AACT,YAAIL,IAAI,CAACM,MAAT,EAAiBN,IAAI,CAACM,MAAL,CAAYC,OAAZ,GAAsBd,KAAtB;AAClB,OAJa,EAKd,KALc,CAAhB;AAOD;;AAjCe;AAkCjB;AAED;AACF;AACA;;;;;;AAKE;AACF;AACA;AACA;AACA;8BACY;AACR,UAAI,KAAKa,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYE,UAAZ,CAAuBC,WAAvB,CAAmC,KAAKH,MAAxC;AACA,aAAKA,MAAL,GAAc,IAAd;AACD;;AAED,UAAI,KAAKI,IAAT,EAAe;AACb,aAAKA,IAAL,CAAUF,UAAV,CAAqBC,WAArB,CAAiC,KAAKC,IAAtC;AACA,aAAKA,IAAL,GAAY,IAAZ;AACA,aAAKC,MAAL,GAAc,IAAd;AACD;;AAED;AACD;AAED;AACF;AACA;AACA;AACA;;;;6BACW;AACP,UAAMX,IAAI,GAAG,IAAb;AACA,UAAMM,MAAM,GAAGM,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;;AAEA,UAAI,KAAKP,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYE,UAAZ,CAAuBC,WAAvB,CAAmC,KAAKH,MAAxC;AACA,aAAKA,MAAL,GAAc,IAAd;AACD;;AAEDA,MAAAA,MAAM,CAACQ,KAAP,GAAe,IAAf;AACAR,MAAAA,MAAM,CAACS,GAAP,GAAa,KAAKC,GAAL,EAAb;;AACAV,MAAAA,MAAM,CAACC,OAAP,GAAiB,UAASU,CAAT,EAAY;AAC3BjB,QAAAA,IAAI,CAACkB,OAAL,CAAa,kBAAb,EAAiCD,CAAjC;AACD,OAFD;;AAIA,UAAME,QAAQ,GAAGP,QAAQ,CAACQ,oBAAT,CAA8B,QAA9B,EAAwC,CAAxC,CAAjB;;AACA,UAAID,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACX,UAAT,CAAoBa,YAApB,CAAiCf,MAAjC,EAAyCa,QAAzC;AACD,OAFD,MAEO;AACL,SAACP,QAAQ,CAACU,IAAT,IAAiBV,QAAQ,CAACW,IAA3B,EAAiCC,WAAjC,CAA6ClB,MAA7C;AACD;;AACD,WAAKA,MAAL,GAAcA,MAAd;AAEA,UAAMmB,SAAS,GACb,gBAAgB,OAAOC,SAAvB,IAAoC,SAASC,IAAT,CAAcD,SAAS,CAACE,SAAxB,CADtC;;AAGA,UAAIH,SAAJ,EAAe;AACbI,QAAAA,UAAU,CAAC,YAAW;AACpB,cAAMlB,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAD,UAAAA,QAAQ,CAACW,IAAT,CAAcC,WAAd,CAA0Bb,MAA1B;AACAC,UAAAA,QAAQ,CAACW,IAAT,CAAcd,WAAd,CAA0BE,MAA1B;AACD,SAJS,EAIP,GAJO,CAAV;AAKD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;;4BACUmB,I,EAAMC,E,EAAI;AAChB,UAAM/B,IAAI,GAAG,IAAb;AACA,UAAIW,MAAJ;;AAEA,UAAI,CAAC,KAAKD,IAAV,EAAgB;AACd,YAAMA,IAAI,GAAGE,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACA,YAAMmB,IAAI,GAAGpB,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAb;AACA,YAAMoB,EAAE,GAAI,KAAKC,QAAL,GAAgB,gBAAgB,KAAKpC,KAAjD;AAEAY,QAAAA,IAAI,CAACyB,SAAL,GAAiB,UAAjB;AACAzB,QAAAA,IAAI,CAAC0B,KAAL,CAAWC,QAAX,GAAsB,UAAtB;AACA3B,QAAAA,IAAI,CAAC0B,KAAL,CAAWE,GAAX,GAAiB,SAAjB;AACA5B,QAAAA,IAAI,CAAC0B,KAAL,CAAWG,IAAX,GAAkB,SAAlB;AACA7B,QAAAA,IAAI,CAAC8B,MAAL,GAAcP,EAAd;AACAvB,QAAAA,IAAI,CAAC+B,MAAL,GAAc,MAAd;AACA/B,QAAAA,IAAI,CAACgC,YAAL,CAAkB,gBAAlB,EAAoC,OAApC;AACAV,QAAAA,IAAI,CAACW,IAAL,GAAY,GAAZ;AACAjC,QAAAA,IAAI,CAACc,WAAL,CAAiBQ,IAAjB;AACApB,QAAAA,QAAQ,CAACW,IAAT,CAAcC,WAAd,CAA0Bd,IAA1B;AAEA,aAAKA,IAAL,GAAYA,IAAZ;AACA,aAAKsB,IAAL,GAAYA,IAAZ;AACD;;AAED,WAAKtB,IAAL,CAAUkC,MAAV,GAAmB,KAAK5B,GAAL,EAAnB;;AAEA,eAAS6B,QAAT,GAAoB;AAClBC,QAAAA,UAAU;AACVf,QAAAA,EAAE;AACH;;AAED,eAASe,UAAT,GAAsB;AACpB,YAAI9C,IAAI,CAACW,MAAT,EAAiB;AACf,cAAI;AACFX,YAAAA,IAAI,CAACU,IAAL,CAAUD,WAAV,CAAsBT,IAAI,CAACW,MAA3B;AACD,WAFD,CAEE,OAAOM,CAAP,EAAU;AACVjB,YAAAA,IAAI,CAACkB,OAAL,CAAa,oCAAb,EAAmDD,CAAnD;AACD;AACF;;AAED,YAAI;AACF;AACA,cAAM8B,IAAI,GAAG,sCAAsC/C,IAAI,CAACkC,QAA3C,GAAsD,IAAnE;AACAvB,UAAAA,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuBkC,IAAvB,CAAT;AACD,SAJD,CAIE,OAAO9B,CAAP,EAAU;AACVN,UAAAA,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAT;AACAF,UAAAA,MAAM,CAACgC,IAAP,GAAc3C,IAAI,CAACkC,QAAnB;AACAvB,UAAAA,MAAM,CAACI,GAAP,GAAa,cAAb;AACD;;AAEDJ,QAAAA,MAAM,CAACsB,EAAP,GAAYjC,IAAI,CAACkC,QAAjB;AAEAlC,QAAAA,IAAI,CAACU,IAAL,CAAUc,WAAV,CAAsBb,MAAtB;AACAX,QAAAA,IAAI,CAACW,MAAL,GAAcA,MAAd;AACD;;AAEDmC,MAAAA,UAAU,GAxDM,CA0DhB;AACA;;AACAhB,MAAAA,IAAI,GAAGA,IAAI,CAACkB,OAAL,CAAazD,eAAb,EAA8B,MAA9B,CAAP;AACA,WAAKyC,IAAL,CAAUiB,KAAV,GAAkBnB,IAAI,CAACkB,OAAL,CAAa1D,QAAb,EAAuB,KAAvB,CAAlB;;AAEA,UAAI;AACF,aAAKoB,IAAL,CAAUwC,MAAV;AACD,OAFD,CAEE,OAAOjC,CAAP,EAAU,CAAE;;AAEd,UAAI,KAAKN,MAAL,CAAYwC,WAAhB,EAA6B;AAC3B,aAAKxC,MAAL,CAAYyC,kBAAZ,GAAiC,YAAW;AAC1C,cAAIpD,IAAI,CAACW,MAAL,CAAY0C,UAAZ,KAA2B,UAA/B,EAA2C;AACzCR,YAAAA,QAAQ;AACT;AACF,SAJD;AAKD,OAND,MAMO;AACL,aAAKlC,MAAL,CAAY2C,MAAZ,GAAqBT,QAArB;AACD;AACF;;;wBAnJoB;AACnB,aAAO,KAAP;AACD;;;;EAhDwB1D,O;;AAoM3BoE,MAAM,CAACC,OAAP,GAAiB9D,YAAjB","sourcesContent":["const Polling = require(\"./polling\");\nconst globalThis = require(\"../globalThis\");\n\nconst rNewline = /\\n/g;\nconst rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nlet callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty() {}\n\nclass JSONPPolling extends Polling {\n  /**\n   * JSONP Polling constructor.\n   *\n   * @param {Object} opts.\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.query = this.query || {};\n\n    // define global callbacks array if not present\n    // we do this here (lazily) to avoid unneeded global pollution\n    if (!callbacks) {\n      // we need to consider multiple engines in the same page\n      callbacks = globalThis.___eio = globalThis.___eio || [];\n    }\n\n    // callback identifier\n    this.index = callbacks.length;\n\n    // add callback to jsonp global\n    const self = this;\n    callbacks.push(function(msg) {\n      self.onData(msg);\n    });\n\n    // append to query string\n    this.query.j = this.index;\n\n    // prevent spurious errors from being emitted when the window is unloaded\n    if (typeof addEventListener === \"function\") {\n      addEventListener(\n        \"beforeunload\",\n        function() {\n          if (self.script) self.script.onerror = empty;\n        },\n        false\n      );\n    }\n  }\n\n  /**\n   * JSONP only supports binary as base64 encoded strings\n   */\n  get supportsBinary() {\n    return false;\n  }\n\n  /**\n   * Closes the socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (this.script) {\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    if (this.form) {\n      this.form.parentNode.removeChild(this.form);\n      this.form = null;\n      this.iframe = null;\n    }\n\n    super.doClose();\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    const self = this;\n    const script = document.createElement(\"script\");\n\n    if (this.script) {\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    script.async = true;\n    script.src = this.uri();\n    script.onerror = function(e) {\n      self.onError(\"jsonp poll error\", e);\n    };\n\n    const insertAt = document.getElementsByTagName(\"script\")[0];\n    if (insertAt) {\n      insertAt.parentNode.insertBefore(script, insertAt);\n    } else {\n      (document.head || document.body).appendChild(script);\n    }\n    this.script = script;\n\n    const isUAgecko =\n      \"undefined\" !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n    if (isUAgecko) {\n      setTimeout(function() {\n        const iframe = document.createElement(\"iframe\");\n        document.body.appendChild(iframe);\n        document.body.removeChild(iframe);\n      }, 100);\n    }\n  }\n\n  /**\n   * Writes with a hidden iframe.\n   *\n   * @param {String} data to send\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    const self = this;\n    let iframe;\n\n    if (!this.form) {\n      const form = document.createElement(\"form\");\n      const area = document.createElement(\"textarea\");\n      const id = (this.iframeId = \"eio_iframe_\" + this.index);\n\n      form.className = \"socketio\";\n      form.style.position = \"absolute\";\n      form.style.top = \"-1000px\";\n      form.style.left = \"-1000px\";\n      form.target = id;\n      form.method = \"POST\";\n      form.setAttribute(\"accept-charset\", \"utf-8\");\n      area.name = \"d\";\n      form.appendChild(area);\n      document.body.appendChild(form);\n\n      this.form = form;\n      this.area = area;\n    }\n\n    this.form.action = this.uri();\n\n    function complete() {\n      initIframe();\n      fn();\n    }\n\n    function initIframe() {\n      if (self.iframe) {\n        try {\n          self.form.removeChild(self.iframe);\n        } catch (e) {\n          self.onError(\"jsonp polling iframe removal error\", e);\n        }\n      }\n\n      try {\n        // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n        const html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n        iframe = document.createElement(html);\n      } catch (e) {\n        iframe = document.createElement(\"iframe\");\n        iframe.name = self.iframeId;\n        iframe.src = \"javascript:0\";\n      }\n\n      iframe.id = self.iframeId;\n\n      self.form.appendChild(iframe);\n      self.iframe = iframe;\n    }\n\n    initIframe();\n\n    // escape \\n to prevent it from being converted into \\r\\n by some UAs\n    // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n    data = data.replace(rEscapedNewline, \"\\\\\\n\");\n    this.area.value = data.replace(rNewline, \"\\\\n\");\n\n    try {\n      this.form.submit();\n    } catch (e) {}\n\n    if (this.iframe.attachEvent) {\n      this.iframe.onreadystatechange = function() {\n        if (self.iframe.readyState === \"complete\") {\n          complete();\n        }\n      };\n    } else {\n      this.iframe.onload = complete;\n    }\n  }\n}\n\nmodule.exports = JSONPPolling;\n"]},"metadata":{},"sourceType":"script"}