{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/duythai/Developer/sadness/a-client/src/component/chatComponent/miniChatCom/chatGroup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getCookie } from '../../../helpers/auth';\nimport socketApp from '../../../socket';\nimport IconButton from '@material-ui/core/IconButton';\nimport \"../../style/call.css\";\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport Peer from \"peerjs\";\nimport { createEmptyAudioTrack } from '../../../helpers/audio';\nimport SimpleMenu from '../miniChatCom/simpleMenu';\nimport MicIcon from '@material-ui/icons/Mic';\nimport MicOffIcon from '@material-ui/icons/MicOff';\nimport hark from \"hark\";\nimport RenderChat from '../renderChat'; // This function is use for send and view message\n\nfunction ChatGroup(props) {\n  _s();\n\n  const userId = getCookie().token;\n  let socket = socketApp.getSocket();\n  const {\n    id\n  } = props;\n  const [audio, setAudio] = useState([]);\n  const [mic, setMic] = useState(true);\n  const [volumn, setVolumn] = useState(false);\n  const [oldPeer, setOldPeer] = useState(null);\n  const [talk, setTalk] = useState(false); // turn on or turn off own volumn\n\n  const handleSetVolumn = () => {\n    if (audio.length !== 0) {\n      setVolumn(!volumn);\n      let value = Object.assign({}, audio.props, {\n        seleted: false,\n        writeable: true\n      });\n      value.muted = !volumn;\n      delete value[\"seleted\"];\n      delete value[\"writeable\"];\n      let old = Object.assign({}, audio, {\n        writeable: true,\n        seleted: false\n      });\n      old.props = value;\n      delete old[\"seleted\"];\n      delete old[\"writeable\"];\n      setAudio(old);\n    }\n  }; // Turn on or turn off the own mic\n\n\n  const handleSetMic = i => {\n    setMic(!mic);\n\n    try {\n      if (mic === true) {\n        const audioTrack = createEmptyAudioTrack();\n        let data = oldPeer.connections;\n        let userMic = Object.keys(data)[i];\n        let sender = data[userMic][0].peerConnection.getSenders()[0];\n        sender.replaceTrack(audioTrack);\n      } else {\n        navigator.mediaDevices.getUserMedia({\n          video: false,\n          audio: true\n        }).then(stream => {\n          let data = oldPeer.connections;\n          let userMic = Object.keys(data)[i];\n          let sender = data[userMic][0].peerConnection.getSenders()[0];\n          sender.replaceTrack(stream.getAudioTracks()[0]);\n        }).catch(err => {});\n      }\n    } catch (error) {}\n  };\n\n  const handleSetVolumnOther = (value, i) => {\n    if (value.audio === true) {\n      let audioTrack = createEmptyAudioTrack();\n      let idMuted = Object.keys(oldPeer.connections)[i];\n      let sender = oldPeer.connections[idMuted][0].peerConnection.getSenders()[0];\n      sender.replaceTrack(audioTrack);\n      const streamNull = new MediaStream([audioTrack]);\n\n      let a = /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audio => audio ? audio.srcObject = streamNull : streamNull,\n        playsInline: true,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this);\n\n      let obj = {\n        stream: a,\n        audio: false,\n        mic: true\n      };\n      let arr = [...audio];\n      arr[i] = obj;\n      setAudio(arr);\n    } else {\n      navigator.mediaDevices.getUserMedia({\n        video: false,\n        audio: true\n      }).then(stream => {\n        let idMuted = Object.keys(oldPeer.connections)[i];\n        let sender = oldPeer.connections[idMuted][0].peerConnection.getSenders()[0];\n        sender.replaceTrack(stream.getAudioTracks()[0]);\n\n        let a = /*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: audio => audio ? audio.srcObject = stream : createNullStream(),\n          playsInline: true,\n          autoPlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this);\n\n        let obj = {\n          stream: a,\n          audio: true,\n          mic: true\n        };\n        let arr = [...audio];\n        arr[i] = obj;\n        setAudio(arr);\n      });\n    }\n  };\n\n  const handleSetMicOther = (value, i) => {\n    console.log(value);\n  }; // Use effect for voice chat\n\n\n  let createNullStream = () => {\n    let audioStream = () => {\n      try {\n        const audioTrack = createEmptyAudioTrack();\n        const streamNull = new MediaStream([audioTrack]);\n        return audioStream = /*#__PURE__*/_jsxDEV(\"audio\", {\n          muted: true,\n          ref: audio => audio.srcObject = streamNull,\n          playsInline: true,\n          autoPlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this);\n      } catch (error) {\n        return;\n      }\n    };\n\n    return audioStream();\n  };\n\n  const createCall = call => {\n    call.on(\"stream\", async userVideoStream => {\n      let audioStream = async () => {\n        const audioTrack = createEmptyAudioTrack();\n        const streamNull = new MediaStream([audioTrack]);\n\n        try {\n          let speechEvents = hark(userVideoStream, {});\n          speechEvents.on('speaking', function () {\n            setTalk(true);\n          });\n          speechEvents.on('stopped_speaking', function () {\n            setTalk(false);\n          });\n          return /*#__PURE__*/_jsxDEV(\"audio\", {\n            playsInline: true,\n            muted: false,\n            ref: audio => audio ? audio.srcObject = userVideoStream : streamNull,\n            autoPlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 28\n          }, this);\n        } catch (error) {\n          let a = createNullStream();\n          let obj = {\n            stream: a,\n            audio: false,\n            mic: false\n          };\n          setAudio(value => [...value, obj]);\n        }\n      };\n\n      let a = await audioStream();\n      let obj = {\n        stream: a,\n        audio: true,\n        mic: true\n      };\n      setAudio(value => [...value, obj]);\n    });\n  };\n\n  const plus = (peer, stream) => {\n    // check if that peer is destroyed or not destroy that mean that was created before\n    if (peer.destroyed === false && mic === true) {\n      // run normally\n      peer.on(\"call\", call => {\n        call.answer(stream);\n        createCall(call);\n      });\n      socket.on(\"user-connect\", value => {\n        const call = peer.call(value.id, stream);\n        createCall(call);\n      });\n    } else {\n      let a = createNullStream();\n      let obj = {\n        stream: a,\n        audio: false,\n        mic: false\n      };\n      setAudio(value => [...value, obj]);\n    }\n  };\n\n  useEffect(() => {\n    const fn = () => {\n      var peerJS = new Peer(userId, {\n        host: \"/\",\n        port: 2704,\n        path: \"/peerjs\"\n      });\n      setOldPeer(peerJS);\n      peerJS.on(\"open\", () => {\n        socket.emit(\"chatVideo\", {\n          idRoom: id,\n          id: userId,\n          g: \"a\"\n        }, callback => {});\n      }); // get user media\n\n      navigator.mediaDevices.getUserMedia({\n        video: false,\n        audio: mic\n      }).then(stream => {\n        plus(peerJS, stream);\n      }).catch(err => {\n        // if user does not accept to stream then create new null stream\n        const audioTrack = createEmptyAudioTrack();\n        const stream = new MediaStream([audioTrack]);\n        plus(peerJS, stream);\n      });\n    };\n\n    fn();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message_container\",\n    children: [/*#__PURE__*/_jsxDEV(RenderChat, {\n      id: props.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"call_div_container\",\n      children: [/*#__PURE__*/_jsxDEV(SimpleMenu, {\n        onClick: value => props.onClick(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_mic\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Voice Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user_device\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"demom\",\n            style: talk === true ? {\n              border: \"2px solid rgba(46, 229, 157, 0.4)\"\n            } : {},\n            src: \"../demo.jpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon_device\",\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: e => handleSetMic(),\n              children: mic === true ? /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(MicOffIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: e => handleSetVolumn(),\n              children: volumn === false ? talk === true ? /*#__PURE__*/_jsxDEV(VolumeUpIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 69\n              }, this) : /*#__PURE__*/_jsxDEV(VolumeMuteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 88\n              }, this) : /*#__PURE__*/_jsxDEV(VolumeOffIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 109\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), audio.length > 0 ? audio.map(function (value, i) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_device\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"demom\",\n              style: talk === true ? {\n                border: \"2px solid rgba(46, 229, 157, 0.4)\"\n              } : {},\n              src: \"../demo.jpeg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"icon_device\",\n              children: [value.stream, value.mic, /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: e => handleSetMicOther(value, i),\n                children: value.mic === true ? /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 63\n                }, this) : /*#__PURE__*/_jsxDEV(MicOffIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 77\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: e => handleSetVolumnOther(value, i),\n                children: value.audio === true ? talk === true ? /*#__PURE__*/_jsxDEV(VolumeUpIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 81\n                }, this) : /*#__PURE__*/_jsxDEV(VolumeMuteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 100\n                }, this) : /*#__PURE__*/_jsxDEV(VolumeOffIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 121\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 36\n          }, this);\n        }) : console.log()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatGroup, \"Ik+kUzVPncNkzTDfuUpR4Hm5P3Q=\");\n\n_c = ChatGroup;\nexport default ChatGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatGroup\");","map":{"version":3,"sources":["/home/duythai/Developer/sadness/a-client/src/component/chatComponent/miniChatCom/chatGroup.js"],"names":["React","useState","useEffect","getCookie","socketApp","IconButton","VolumeMuteIcon","VolumeUpIcon","VolumeOffIcon","Peer","createEmptyAudioTrack","SimpleMenu","MicIcon","MicOffIcon","hark","RenderChat","ChatGroup","props","userId","token","socket","getSocket","id","audio","setAudio","mic","setMic","volumn","setVolumn","oldPeer","setOldPeer","talk","setTalk","handleSetVolumn","length","value","Object","assign","seleted","writeable","muted","old","handleSetMic","i","audioTrack","data","connections","userMic","keys","sender","peerConnection","getSenders","replaceTrack","navigator","mediaDevices","getUserMedia","video","then","stream","getAudioTracks","catch","err","error","handleSetVolumnOther","idMuted","streamNull","MediaStream","a","srcObject","obj","arr","createNullStream","handleSetMicOther","console","log","audioStream","createCall","call","on","userVideoStream","speechEvents","plus","peer","destroyed","answer","fn","peerJS","host","port","path","emit","idRoom","g","callback","onClick","border","e","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAO,sBAAP;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,qBAAT,QAAsC,wBAAtC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAMC,MAAM,GAAGf,SAAS,GAAGgB,KAA3B;AACA,MAAIC,MAAM,GAAGhB,SAAS,CAACiB,SAAV,EAAb;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASL,KAAf;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACwB,GAAD,EAAMC,MAAN,IAAgBzB,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAAC0B,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAAC4B,OAAD,EAAUC,UAAV,IAAwB7B,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAC8B,IAAD,EAAOC,OAAP,IAAkB/B,QAAQ,CAAC,KAAD,CAAhC,CARsB,CAUtB;;AACA,QAAMgC,eAAe,GAAG,MAAM;AAC1B,QAAIV,KAAK,CAACW,MAAN,KAAiB,CAArB,EAAwB;AACpBN,MAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACA,UAAIQ,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBd,KAAK,CAACN,KAAxB,EAA+B;AAAEqB,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,SAAS,EAAE;AAA7B,OAA/B,CAAZ;AACAJ,MAAAA,KAAK,CAACK,KAAN,GAAc,CAACb,MAAf;AACA,aAAOQ,KAAK,CAAC,SAAD,CAAZ;AACA,aAAOA,KAAK,CAAC,WAAD,CAAZ;AACA,UAAIM,GAAG,GAAGL,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBd,KAAlB,EAAyB;AAAEgB,QAAAA,SAAS,EAAE,IAAb;AAAmBD,QAAAA,OAAO,EAAE;AAA5B,OAAzB,CAAV;AACAG,MAAAA,GAAG,CAACxB,KAAJ,GAAYkB,KAAZ;AACA,aAAOM,GAAG,CAAC,SAAD,CAAV;AACA,aAAOA,GAAG,CAAC,WAAD,CAAV;AACAjB,MAAAA,QAAQ,CAACiB,GAAD,CAAR;AACH;AACJ,GAbD,CAXsB,CAyBtB;;;AACA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBjB,IAAAA,MAAM,CAAC,CAACD,GAAF,CAAN;;AACA,QAAI;AACA,UAAIA,GAAG,KAAK,IAAZ,EAAkB;AACd,cAAMmB,UAAU,GAAGlC,qBAAqB,EAAxC;AACA,YAAImC,IAAI,GAAGhB,OAAO,CAACiB,WAAnB;AACA,YAAIC,OAAO,GAAGX,MAAM,CAACY,IAAP,CAAYH,IAAZ,EAAkBF,CAAlB,CAAd;AACA,YAAIM,MAAM,GAAGJ,IAAI,CAACE,OAAD,CAAJ,CAAc,CAAd,EAAiBG,cAAjB,CAAgCC,UAAhC,GAA6C,CAA7C,CAAb;AACAF,QAAAA,MAAM,CAACG,YAAP,CAAoBR,UAApB;AACH,OAND,MAOK;AACDS,QAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAAEC,UAAAA,KAAK,EAAE,KAAT;AAAgBjC,UAAAA,KAAK,EAAE;AAAvB,SAApC,EAAmEkC,IAAnE,CAAwEC,MAAM,IAAI;AAC9E,cAAIb,IAAI,GAAGhB,OAAO,CAACiB,WAAnB;AACA,cAAIC,OAAO,GAAGX,MAAM,CAACY,IAAP,CAAYH,IAAZ,EAAkBF,CAAlB,CAAd;AACA,cAAIM,MAAM,GAAGJ,IAAI,CAACE,OAAD,CAAJ,CAAc,CAAd,EAAiBG,cAAjB,CAAgCC,UAAhC,GAA6C,CAA7C,CAAb;AACAF,UAAAA,MAAM,CAACG,YAAP,CAAoBM,MAAM,CAACC,cAAP,GAAwB,CAAxB,CAApB;AACH,SALD,EAKGC,KALH,CAKSC,GAAG,IAAI,CACf,CAND;AAOH;AACJ,KAjBD,CAiBE,OAAOC,KAAP,EAAc,CACf;AACJ,GArBD;;AAsBA,QAAMC,oBAAoB,GAAG,CAAC5B,KAAD,EAAQQ,CAAR,KAAc;AACvC,QAAIR,KAAK,CAACZ,KAAN,KAAgB,IAApB,EAA0B;AACtB,UAAIqB,UAAU,GAAGlC,qBAAqB,EAAtC;AACA,UAAIsD,OAAO,GAAG5B,MAAM,CAACY,IAAP,CAAYnB,OAAO,CAACiB,WAApB,EAAiCH,CAAjC,CAAd;AACA,UAAIM,MAAM,GAAGpB,OAAO,CAACiB,WAAR,CAAoBkB,OAApB,EAA6B,CAA7B,EAAgCd,cAAhC,CAA+CC,UAA/C,GAA4D,CAA5D,CAAb;AACAF,MAAAA,MAAM,CAACG,YAAP,CAAoBR,UAApB;AACA,YAAMqB,UAAU,GAAG,IAAIC,WAAJ,CAAgB,CAACtB,UAAD,CAAhB,CAAnB;;AACA,UAAIuB,CAAC,gBACD;AAAO,QAAA,GAAG,EAAE5C,KAAK,IAAIA,KAAK,GAAGA,KAAK,CAAC6C,SAAN,GAAkBH,UAArB,GAAkCA,UAA5D;AAAwE,QAAA,WAAW,MAAnF;AAAoF,QAAA,QAAQ;AAA5F;AAAA;AAAA;AAAA;AAAA,cADJ;;AAGA,UAAII,GAAG,GAAG;AACNX,QAAAA,MAAM,EAAES,CADF;AAEN5C,QAAAA,KAAK,EAAE,KAFD;AAGNE,QAAAA,GAAG,EAAE;AAHC,OAAV;AAKA,UAAI6C,GAAG,GAAG,CAAC,GAAG/C,KAAJ,CAAV;AACA+C,MAAAA,GAAG,CAAC3B,CAAD,CAAH,GAAS0B,GAAT;AACA7C,MAAAA,QAAQ,CAAC8C,GAAD,CAAR;AACH,KAjBD,MAiBO;AACHjB,MAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAAEC,QAAAA,KAAK,EAAE,KAAT;AAAgBjC,QAAAA,KAAK,EAAE;AAAvB,OAApC,EAAmEkC,IAAnE,CAAwEC,MAAM,IAAI;AAC9E,YAAIM,OAAO,GAAG5B,MAAM,CAACY,IAAP,CAAYnB,OAAO,CAACiB,WAApB,EAAiCH,CAAjC,CAAd;AACA,YAAIM,MAAM,GAAGpB,OAAO,CAACiB,WAAR,CAAoBkB,OAApB,EAA6B,CAA7B,EAAgCd,cAAhC,CAA+CC,UAA/C,GAA4D,CAA5D,CAAb;AACAF,QAAAA,MAAM,CAACG,YAAP,CAAoBM,MAAM,CAACC,cAAP,GAAwB,CAAxB,CAApB;;AACA,YAAIQ,CAAC,gBACD;AAAO,UAAA,GAAG,EAAE5C,KAAK,IAAIA,KAAK,GAAGA,KAAK,CAAC6C,SAAN,GAAkBV,MAArB,GAA8Ba,gBAAgB,EAAxE;AAA4E,UAAA,WAAW,MAAvF;AAAwF,UAAA,QAAQ;AAAhG;AAAA;AAAA;AAAA;AAAA,gBADJ;;AAGA,YAAIF,GAAG,GAAG;AACNX,UAAAA,MAAM,EAAES,CADF;AAEN5C,UAAAA,KAAK,EAAE,IAFD;AAGNE,UAAAA,GAAG,EAAE;AAHC,SAAV;AAKA,YAAI6C,GAAG,GAAG,CAAC,GAAG/C,KAAJ,CAAV;AACA+C,QAAAA,GAAG,CAAC3B,CAAD,CAAH,GAAS0B,GAAT;AACA7C,QAAAA,QAAQ,CAAC8C,GAAD,CAAR;AACH,OAfD;AAgBH;AACJ,GApCD;;AAqCA,QAAME,iBAAiB,GAAG,CAACrC,KAAD,EAAQQ,CAAR,KAAc;AACpC8B,IAAAA,OAAO,CAACC,GAAR,CAAYvC,KAAZ;AACH,GAFD,CArFsB,CAwFtB;;;AACA,MAAIoC,gBAAgB,GAAG,MAAM;AACzB,QAAII,WAAW,GAAG,MAAM;AACpB,UAAI;AACA,cAAM/B,UAAU,GAAGlC,qBAAqB,EAAxC;AACA,cAAMuD,UAAU,GAAG,IAAIC,WAAJ,CAAgB,CAACtB,UAAD,CAAhB,CAAnB;AACA,eAAO+B,WAAW,gBACd;AAAO,UAAA,KAAK,EAAE,IAAd;AAAoB,UAAA,GAAG,EAAEpD,KAAK,IAAIA,KAAK,CAAC6C,SAAN,GAAkBH,UAApD;AAAgE,UAAA,WAAW,MAA3E;AAA4E,UAAA,QAAQ;AAApF;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAND,CAME,OAAOH,KAAP,EAAc;AACZ;AACH;AACJ,KAVD;;AAWA,WAAOa,WAAW,EAAlB;AACH,GAbD;;AAcA,QAAMC,UAAU,GAAIC,IAAD,IAAU;AACzBA,IAAAA,IAAI,CAACC,EAAL,CAAQ,QAAR,EAAkB,MAAOC,eAAP,IAA2B;AACzC,UAAIJ,WAAW,GAAG,YAAY;AAC1B,cAAM/B,UAAU,GAAGlC,qBAAqB,EAAxC;AACA,cAAMuD,UAAU,GAAG,IAAIC,WAAJ,CAAgB,CAACtB,UAAD,CAAhB,CAAnB;;AACA,YAAI;AACA,cAAIoC,YAAY,GAAGlE,IAAI,CAACiE,eAAD,EAAkB,EAAlB,CAAvB;AACAC,UAAAA,YAAY,CAACF,EAAb,CAAgB,UAAhB,EAA4B,YAAY;AACpC9C,YAAAA,OAAO,CAAC,IAAD,CAAP;AACH,WAFD;AAGAgD,UAAAA,YAAY,CAACF,EAAb,CAAgB,kBAAhB,EAAoC,YAAY;AAC5C9C,YAAAA,OAAO,CAAC,KAAD,CAAP;AACH,WAFD;AAGA,8BAAO;AAAO,YAAA,WAAW,MAAlB;AAAmB,YAAA,KAAK,EAAE,KAA1B;AAAiC,YAAA,GAAG,EAAET,KAAK,IAAIA,KAAK,GAAGA,KAAK,CAAC6C,SAAN,GAAkBW,eAArB,GAAuCd,UAA3F;AACL,YAAA,QAAQ;AADH;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEH,SAVD,CAUE,OAAOH,KAAP,EAAc;AACZ,cAAIK,CAAC,GAAGI,gBAAgB,EAAxB;AACA,cAAIF,GAAG,GAAG;AACNX,YAAAA,MAAM,EAAES,CADF;AAEN5C,YAAAA,KAAK,EAAE,KAFD;AAGNE,YAAAA,GAAG,EAAE;AAHC,WAAV;AAKAD,UAAAA,QAAQ,CAACW,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAWkC,GAAX,CAAV,CAAR;AACH;AACJ,OAtBD;;AAuBA,UAAIF,CAAC,GAAG,MAAMQ,WAAW,EAAzB;AACA,UAAIN,GAAG,GAAG;AACNX,QAAAA,MAAM,EAAES,CADF;AAEN5C,QAAAA,KAAK,EAAE,IAFD;AAGNE,QAAAA,GAAG,EAAE;AAHC,OAAV;AAKAD,MAAAA,QAAQ,CAACW,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAWkC,GAAX,CAAV,CAAR;AACH,KA/BD;AAgCH,GAjCD;;AAkCA,QAAMY,IAAI,GAAG,CAACC,IAAD,EAAOxB,MAAP,KAAkB;AAC3B;AACA,QAAIwB,IAAI,CAACC,SAAL,KAAmB,KAAnB,IAA4B1D,GAAG,KAAK,IAAxC,EAA8C;AAC1C;AACAyD,MAAAA,IAAI,CAACJ,EAAL,CAAQ,MAAR,EAAgBD,IAAI,IAAI;AACpBA,QAAAA,IAAI,CAACO,MAAL,CAAY1B,MAAZ;AACAkB,QAAAA,UAAU,CAACC,IAAD,CAAV;AACH,OAHD;AAIAzD,MAAAA,MAAM,CAAC0D,EAAP,CAAU,cAAV,EAA0B3C,KAAK,IAAI;AAC/B,cAAM0C,IAAI,GAAGK,IAAI,CAACL,IAAL,CAAU1C,KAAK,CAACb,EAAhB,EAAoBoC,MAApB,CAAb;AACAkB,QAAAA,UAAU,CAACC,IAAD,CAAV;AACH,OAHD;AAIH,KAVD,MAUO;AACH,UAAIV,CAAC,GAAGI,gBAAgB,EAAxB;AACA,UAAIF,GAAG,GAAG;AACNX,QAAAA,MAAM,EAAES,CADF;AAEN5C,QAAAA,KAAK,EAAE,KAFD;AAGNE,QAAAA,GAAG,EAAE;AAHC,OAAV;AAKAD,MAAAA,QAAQ,CAACW,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAWkC,GAAX,CAAV,CAAR;AACH;AACJ,GArBD;;AAsBAnE,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMmF,EAAE,GAAG,MAAM;AACb,UAAIC,MAAM,GAAG,IAAI7E,IAAJ,CAASS,MAAT,EAAiB;AAC1BqE,QAAAA,IAAI,EAAE,GADoB;AAE1BC,QAAAA,IAAI,EAAE,IAFoB;AAG1BC,QAAAA,IAAI,EAAE;AAHoB,OAAjB,CAAb;AAKA3D,MAAAA,UAAU,CAACwD,MAAD,CAAV;AACAA,MAAAA,MAAM,CAACR,EAAP,CAAU,MAAV,EAAkB,MAAM;AACpB1D,QAAAA,MAAM,CAACsE,IAAP,CAAY,WAAZ,EAAyB;AAAEC,UAAAA,MAAM,EAAErE,EAAV;AAAcA,UAAAA,EAAE,EAAEJ,MAAlB;AAA0B0E,UAAAA,CAAC,EAAE;AAA7B,SAAzB,EAA8DC,QAAD,IAAc,CAAG,CAA9E;AACH,OAFD,EAPa,CAUb;;AACAxC,MAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAAEC,QAAAA,KAAK,EAAE,KAAT;AAAgBjC,QAAAA,KAAK,EAAEE;AAAvB,OAApC,EAAkEgC,IAAlE,CAAuEC,MAAM,IAAI;AAC7EuB,QAAAA,IAAI,CAACK,MAAD,EAAS5B,MAAT,CAAJ;AACH,OAFD,EAEGE,KAFH,CAESC,GAAG,IAAI;AACZ;AACA,cAAMjB,UAAU,GAAGlC,qBAAqB,EAAxC;AACA,cAAMgD,MAAM,GAAG,IAAIQ,WAAJ,CAAgB,CAACtB,UAAD,CAAhB,CAAf;AACAqC,QAAAA,IAAI,CAACK,MAAD,EAAS5B,MAAT,CAAJ;AACH,OAPD;AAQH,KAnBD;;AAoBA2B,IAAAA,EAAE;AACL,GAtBQ,EAsBN,CAAC/D,EAAD,CAtBM,CAAT;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,EAAE,EAAEL,KAAK,CAACK;AAAtB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAGa,KAAD,IAAWlB,KAAK,CAAC6E,OAAN,CAAc3D,KAAd;AAAhC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AACI,YAAA,GAAG,EAAC,OADR;AAEI,YAAA,KAAK,EAAEJ,IAAI,KAAK,IAAT,GAAgB;AAAEgE,cAAAA,MAAM,EAAE;AAAV,aAAhB,GAAkE,EAF7E;AAGI,YAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACI,QAAC,UAAD;AAAY,cAAA,OAAO,EAAGC,CAAD,IAAOtD,YAAY,EAAxC;AAAA,wBACKjB,GAAG,KAAK,IAAR,gBAAe,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,sBAAf,gBAA6B,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADlC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,UAAD;AAAY,cAAA,OAAO,EAAGuE,CAAD,IAAO/D,eAAe,EAA3C;AAAA,wBACKN,MAAM,KAAK,KAAX,GAAmBI,IAAI,KAAK,IAAT,gBAAgB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,sBAAhB,gBAAmC,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,sBAAtD,gBAA2E,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADhF;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAiBQR,KAAK,CAACW,MAAN,GAAe,CAAf,GAAmBX,KAAK,CAAC0E,GAAN,CAAU,UAAU9D,KAAV,EAAiBQ,CAAjB,EAAoB;AAC7C,8BAAO;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACH;AACI,cAAA,GAAG,EAAC,OADR;AAEI,cAAA,KAAK,EAAEZ,IAAI,KAAK,IAAT,GAAgB;AAAEgE,gBAAAA,MAAM,EAAE;AAAV,eAAhB,GAAkE,EAF7E;AAGI,cAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,oBADG,eAKH;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,yBACK5D,KAAK,CAACuB,MADX,EAEKvB,KAAK,CAACV,GAFX,eAGI,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAGuE,CAAD,IAAOxB,iBAAiB,CAACrC,KAAD,EAAQQ,CAAR,CAA7C;AAAA,0BACKR,KAAK,CAACV,GAAN,KAAc,IAAd,gBAAqB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,wBAArB,gBAAmC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADxC;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAMI,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAGuE,CAAD,IAAOjC,oBAAoB,CAAC5B,KAAD,EAAQQ,CAAR,CAAhD;AAAA,0BACKR,KAAK,CAACZ,KAAN,KAAgB,IAAhB,GAAuBQ,IAAI,KAAK,IAAT,gBAAgB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,wBAAhB,gBAAmC,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,wBAA1D,gBAA+E,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADpF;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALG;AAAA,aAAkCY,CAAlC;AAAA;AAAA;AAAA;AAAA,kBAAP;AAgBH,SAjBkB,CAAnB,GAiBK8B,OAAO,CAACC,GAAR,EAlCb;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6CH;;GAnOQ1D,S;;KAAAA,S;AAoOT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { getCookie } from '../../../helpers/auth';\nimport socketApp from '../../../socket';\nimport IconButton from '@material-ui/core/IconButton';\nimport \"../../style/call.css\"\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport Peer from \"peerjs\"\nimport { createEmptyAudioTrack } from '../../../helpers/audio';\nimport SimpleMenu from '../miniChatCom/simpleMenu';\nimport MicIcon from '@material-ui/icons/Mic';\nimport MicOffIcon from '@material-ui/icons/MicOff';\nimport hark from \"hark\"\nimport RenderChat from '../renderChat';\n\n// This function is use for send and view message\nfunction ChatGroup(props) {\n    const userId = getCookie().token;\n    let socket = socketApp.getSocket();\n    const { id } = props;\n    const [audio, setAudio] = useState([]);\n    const [mic, setMic] = useState(true)\n    const [volumn, setVolumn] = useState(false)\n    const [oldPeer, setOldPeer] = useState(null)\n    const [talk, setTalk] = useState(false)\n\n    // turn on or turn off own volumn\n    const handleSetVolumn = () => {\n        if (audio.length !== 0) {\n            setVolumn(!volumn)\n            let value = Object.assign({}, audio.props, { seleted: false, writeable: true })\n            value.muted = !volumn\n            delete value[\"seleted\"]\n            delete value[\"writeable\"]\n            let old = Object.assign({}, audio, { writeable: true, seleted: false })\n            old.props = value\n            delete old[\"seleted\"]\n            delete old[\"writeable\"]\n            setAudio(old)\n        }\n    }\n    // Turn on or turn off the own mic\n    const handleSetMic = (i) => {\n        setMic(!mic)\n        try {\n            if (mic === true) {\n                const audioTrack = createEmptyAudioTrack();\n                let data = oldPeer.connections\n                let userMic = Object.keys(data)[i]\n                let sender = data[userMic][0].peerConnection.getSenders()[0]\n                sender.replaceTrack(audioTrack)\n            }\n            else {\n                navigator.mediaDevices.getUserMedia({ video: false, audio: true }).then(stream => {\n                    let data = oldPeer.connections\n                    let userMic = Object.keys(data)[i]\n                    let sender = data[userMic][0].peerConnection.getSenders()[0]\n                    sender.replaceTrack(stream.getAudioTracks()[0])\n                }).catch(err => {\n                })\n            }\n        } catch (error) {\n        }\n    }\n    const handleSetVolumnOther = (value, i) => {\n        if (value.audio === true) {\n            let audioTrack = createEmptyAudioTrack()\n            let idMuted = Object.keys(oldPeer.connections)[i]\n            let sender = oldPeer.connections[idMuted][0].peerConnection.getSenders()[0]\n            sender.replaceTrack(audioTrack)\n            const streamNull = new MediaStream([audioTrack]);\n            let a = (\n                <audio ref={audio => audio ? audio.srcObject = streamNull : streamNull} playsInline autoPlay />\n            )\n            let obj = {\n                stream: a,\n                audio: false,\n                mic: true\n            }\n            let arr = [...audio]\n            arr[i] = obj\n            setAudio(arr)\n        } else {\n            navigator.mediaDevices.getUserMedia({ video: false, audio: true }).then(stream => {\n                let idMuted = Object.keys(oldPeer.connections)[i]\n                let sender = oldPeer.connections[idMuted][0].peerConnection.getSenders()[0]\n                sender.replaceTrack(stream.getAudioTracks()[0])\n                let a = (\n                    <audio ref={audio => audio ? audio.srcObject = stream : createNullStream()} playsInline autoPlay />\n                )\n                let obj = {\n                    stream: a,\n                    audio: true,\n                    mic: true\n                }\n                let arr = [...audio]\n                arr[i] = obj\n                setAudio(arr)\n            })\n        }\n    }\n    const handleSetMicOther = (value, i) => {\n        console.log(value)\n    }\n    // Use effect for voice chat\n    let createNullStream = () => {\n        let audioStream = () => {\n            try {\n                const audioTrack = createEmptyAudioTrack();\n                const streamNull = new MediaStream([audioTrack]);\n                return audioStream = (\n                    <audio muted={true} ref={audio => audio.srcObject = streamNull} playsInline autoPlay />\n                )\n            } catch (error) {\n                return\n            }\n        }\n        return audioStream()\n    }\n    const createCall = (call) => {\n        call.on(\"stream\", async (userVideoStream) => {\n            let audioStream = async () => {\n                const audioTrack = createEmptyAudioTrack();\n                const streamNull = new MediaStream([audioTrack]);\n                try {\n                    let speechEvents = hark(userVideoStream, {})\n                    speechEvents.on('speaking', function () {\n                        setTalk(true)\n                    });\n                    speechEvents.on('stopped_speaking', function () {\n                        setTalk(false)\n                    });\n                    return <audio playsInline muted={false} ref={audio => audio ? audio.srcObject = userVideoStream : streamNull\n                    } autoPlay />\n                } catch (error) {\n                    let a = createNullStream()\n                    let obj = {\n                        stream: a,\n                        audio: false,\n                        mic: false\n                    }\n                    setAudio(value => [...value, obj])\n                }\n            }\n            let a = await audioStream()\n            let obj = {\n                stream: a,\n                audio: true,\n                mic: true\n            }\n            setAudio(value => [...value, obj])\n        })\n    }\n    const plus = (peer, stream) => {\n        // check if that peer is destroyed or not destroy that mean that was created before\n        if (peer.destroyed === false && mic === true) {\n            // run normally\n            peer.on(\"call\", call => {\n                call.answer(stream)\n                createCall(call)\n            })\n            socket.on(\"user-connect\", value => {\n                const call = peer.call(value.id, stream)\n                createCall(call)\n            })\n        } else {\n            let a = createNullStream()\n            let obj = {\n                stream: a,\n                audio: false,\n                mic: false\n            }\n            setAudio(value => [...value, obj])\n        }\n    }\n    useEffect(() => {\n        const fn = () => {\n            var peerJS = new Peer(userId, {\n                host: \"/\",\n                port: 2704,\n                path: \"/peerjs\"\n            })\n            setOldPeer(peerJS)\n            peerJS.on(\"open\", () => {\n                socket.emit(\"chatVideo\", { idRoom: id, id: userId, g: \"a\" }, (callback) => { })\n            })\n            // get user media\n            navigator.mediaDevices.getUserMedia({ video: false, audio: mic }).then(stream => {\n                plus(peerJS, stream)\n            }).catch(err => {\n                // if user does not accept to stream then create new null stream\n                const audioTrack = createEmptyAudioTrack();\n                const stream = new MediaStream([audioTrack]);\n                plus(peerJS, stream)\n            })\n        }\n        fn()\n    }, [id])\n    return (\n        <div className=\"message_container\">\n            <RenderChat id={props.id} />\n            <div className=\"call_div_container\">\n                <SimpleMenu onClick={(value) => props.onClick(value)} />\n                <div className=\"main_mic\">\n                    <p>Voice Chat</p>\n                    <div className=\"user_device\">\n                        <img\n                            alt=\"demom\"\n                            style={talk === true ? { border: \"2px solid rgba(46, 229, 157, 0.4)\" } : {}}\n                            src=\"../demo.jpeg\"></img>\n                        <div className=\"icon_device\">\n                            <IconButton onClick={(e) => handleSetMic()}>\n                                {mic === true ? <MicIcon /> : <MicOffIcon />}\n                            </IconButton>\n                            <IconButton onClick={(e) => handleSetVolumn()}>\n                                {volumn === false ? talk === true ? <VolumeUpIcon /> : <VolumeMuteIcon /> : <VolumeOffIcon />}\n                            </IconButton>\n                        </div>\n                    </div>\n                    {\n                        audio.length > 0 ? audio.map(function (value, i) {\n                            return <div className=\"user_device\" key={i}>\n                                <img\n                                    alt=\"demom\"\n                                    style={talk === true ? { border: \"2px solid rgba(46, 229, 157, 0.4)\" } : {}}\n                                    src=\"../demo.jpeg\"></img>\n                                <div className=\"icon_device\">\n                                    {value.stream}\n                                    {value.mic}\n                                    <IconButton onClick={(e) => handleSetMicOther(value, i)}>\n                                        {value.mic === true ? <MicIcon /> : <MicOffIcon />}\n                                    </IconButton>\n                                    <IconButton onClick={(e) => handleSetVolumnOther(value, i)}>\n                                        {value.audio === true ? talk === true ? <VolumeUpIcon /> : <VolumeMuteIcon /> : <VolumeOffIcon />}\n                                    </IconButton>\n                                </div>\n                            </div>\n                        }) : console.log()\n                    }\n                </div>\n            </div>\n        </div >\n    )\n}\nexport default ChatGroup"]},"metadata":{},"sourceType":"module"}