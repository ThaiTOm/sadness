{"ast":null,"code":"let db;\nlet dbReq = indexedDB.open('myDatabase', 3);\n\nfunction addStickyNote(db, message) {\n  // Start a database transaction and get the notes object store\n  let tx = db.transaction(['notes'], 'readwrite');\n  let store = tx.objectStore('notes');\n  let value = {\n    id: new Date(),\n    value: message\n  };\n  let req = store.add(value);\n\n  req.onsuccess = e => {\n    console.log(\"succesFull\");\n  };\n\n  req.onerror = e => {\n    console.log(\"failure\");\n  };\n}\n\ndbReq.onupgradeneeded = function (event) {\n  // Set the db variable to our database so we can use it!  \n  db = event.target.result; // Create an object store named notes. Object stores\n  // in databases are where data are stored.\n\n  let notes = db.createObjectStore('notes', {\n    autoIncrement: true,\n    keyPath: \"id\"\n  });\n};\n\ndbReq.onsuccess = function (event) {\n  db = event.target.result;\n  addStickyNote(db, 'Sloths are awesome!');\n};\n\ndbReq.onerror = function (event) {\n  alert('error opening database ' + event.target.errorCode);\n};\n\nexport const addData = value => {};","map":{"version":3,"sources":["/home/dthai/sadness/a-client/src/helpers/indexeddb.js"],"names":["db","dbReq","indexedDB","open","addStickyNote","message","tx","transaction","store","objectStore","value","id","Date","req","add","onsuccess","e","console","log","onerror","onupgradeneeded","event","target","result","notes","createObjectStore","autoIncrement","keyPath","alert","errorCode","addData"],"mappings":"AAAA,IAAIA,EAAJ;AACA,IAAIC,KAAK,GAAGC,SAAS,CAACC,IAAV,CAAe,YAAf,EAA6B,CAA7B,CAAZ;;AAEA,SAASC,aAAT,CAAuBJ,EAAvB,EAA2BK,OAA3B,EAAoC;AAChC;AACA,MAAIC,EAAE,GAAGN,EAAE,CAACO,WAAH,CAAe,CAAC,OAAD,CAAf,EAA0B,WAA1B,CAAT;AACA,MAAIC,KAAK,GAAGF,EAAE,CAACG,WAAH,CAAe,OAAf,CAAZ;AACA,MAAIC,KAAK,GAAG;AACRC,IAAAA,EAAE,EAAE,IAAIC,IAAJ,EADI;AAERF,IAAAA,KAAK,EAAEL;AAFC,GAAZ;AAIA,MAAIQ,GAAG,GAAGL,KAAK,CAACM,GAAN,CAAUJ,KAAV,CAAV;;AACAG,EAAAA,GAAG,CAACE,SAAJ,GAAiBC,CAAD,IAAO;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,GAFD;;AAGAL,EAAAA,GAAG,CAACM,OAAJ,GAAeH,CAAD,IAAO;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,GAFD;AAGH;;AACDjB,KAAK,CAACmB,eAAN,GAAwB,UAAUC,KAAV,EAAiB;AACrC;AACArB,EAAAA,EAAE,GAAGqB,KAAK,CAACC,MAAN,CAAaC,MAAlB,CAFqC,CAIrC;AACA;;AACA,MAAIC,KAAK,GAAGxB,EAAE,CAACyB,iBAAH,CAAqB,OAArB,EAA8B;AAAEC,IAAAA,aAAa,EAAE,IAAjB;AAAuBC,IAAAA,OAAO,EAAE;AAAhC,GAA9B,CAAZ;AACH,CAPD;;AAQA1B,KAAK,CAACc,SAAN,GAAkB,UAAUM,KAAV,EAAiB;AAC/BrB,EAAAA,EAAE,GAAGqB,KAAK,CAACC,MAAN,CAAaC,MAAlB;AACAnB,EAAAA,aAAa,CAACJ,EAAD,EAAK,qBAAL,CAAb;AACH,CAHD;;AAKAC,KAAK,CAACkB,OAAN,GAAgB,UAAUE,KAAV,EAAiB;AAC7BO,EAAAA,KAAK,CAAC,4BAA4BP,KAAK,CAACC,MAAN,CAAaO,SAA1C,CAAL;AACH,CAFD;;AAGA,OAAO,MAAMC,OAAO,GAAIpB,KAAD,IAAW,CAEjC,CAFM","sourcesContent":["let db;\nlet dbReq = indexedDB.open('myDatabase', 3);\n\nfunction addStickyNote(db, message) {\n    // Start a database transaction and get the notes object store\n    let tx = db.transaction(['notes'], 'readwrite');\n    let store = tx.objectStore('notes');\n    let value = {\n        id: new Date(),\n        value: message\n    }\n    let req = store.add(value)\n    req.onsuccess = (e) => {\n        console.log(\"succesFull\")\n    }\n    req.onerror = (e) => {\n        console.log(\"failure\")\n    }\n}\ndbReq.onupgradeneeded = function (event) {\n    // Set the db variable to our database so we can use it!  \n    db = event.target.result;\n\n    // Create an object store named notes. Object stores\n    // in databases are where data are stored.\n    let notes = db.createObjectStore('notes', { autoIncrement: true, keyPath: \"id\" });\n}\ndbReq.onsuccess = function (event) {\n    db = event.target.result;\n    addStickyNote(db, 'Sloths are awesome!');\n}\n\ndbReq.onerror = function (event) {\n    alert('error opening database ' + event.target.errorCode);\n}\nexport const addData = (value) => {\n\n}"]},"metadata":{},"sourceType":"module"}