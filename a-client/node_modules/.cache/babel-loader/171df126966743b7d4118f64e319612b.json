{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dthai/sadness/a-client/src/component/chatComponent/miniChatCom/chatCouple.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getCookie } from '../../../helpers/auth';\nimport IconButton from '@material-ui/core/IconButton';\nimport \"../../../assets/style/call.css\";\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport { createEmptyAudioTrack } from '../../../helpers/message/audio';\nimport SimpleMenu from '../miniChatCom/simpleMenu';\nimport MicIcon from '@material-ui/icons/Mic';\nimport MicOffIcon from '@material-ui/icons/MicOff';\nimport hark from \"hark\";\nimport RenderChat from '../renderChat'; // This function is use for send and view message\n\nfunction ChatCouple(props) {\n  _s();\n\n  const userId = getCookie().token;\n  const {\n    id,\n    peerJS,\n    socket\n  } = props;\n  const [audio, setAudio] = useState(null);\n  const [mic, setMic] = useState(false);\n  const [volumn, setVolumn] = useState(false);\n  const [user, setUser] = useState(null);\n  const [talk, setTalk] = useState(false);\n  const [accor, setAccor] = useState(false);\n\n  const handleOpenAccor = () => {\n    setAccor(!accor);\n  };\n\n  const handleSetVolumn = () => {\n    if (audio) {\n      setVolumn(!volumn);\n      let value = Object.assign({}, audio.props, {\n        seleted: false,\n        writeable: true\n      });\n      value.muted = !volumn;\n      delete value[\"seleted\"];\n      delete value[\"writeable\"];\n      let old = Object.assign({}, audio, {\n        writeable: true,\n        seleted: false\n      });\n      old.props = value;\n      delete old[\"seleted\"];\n      delete old[\"writeable\"];\n      setAudio(old);\n    }\n  };\n\n  const handleSetMic = () => {\n    // if value send from server is only one person return that else do another\n    let userMic = typeof user === \"string\" ? user : user[0] === userId ? user[1] : user[0];\n\n    try {\n      if (mic === true) {\n        const audioTrack = createEmptyAudioTrack();\n        let data = peerJS.connections;\n        let sender = data[userMic][0].peerConnection.getSenders()[0];\n        sender.replaceTrack(audioTrack);\n      } else {\n        navigator.mediaDevices.getUserMedia({\n          video: false,\n          audio: true\n        }).then(stream => {\n          let data = peerJS.connections;\n          let sender = data[userMic][0].peerConnection.getSenders()[0];\n          sender.replaceTrack(stream.getAudioTracks()[0]);\n        }).catch(err => {});\n      }\n    } catch (error) {}\n\n    setMic(!mic);\n  };\n\n  let createNullStream = async () => {\n    let audioStream = async () => {\n      try {\n        const audioTrack = createEmptyAudioTrack();\n        const streamNull = new MediaStream([audioTrack]);\n        audioStream = /*#__PURE__*/_jsxDEV(\"audio\", {\n          muted: true,\n          ref: audio => audio.srcObject = streamNull,\n          playsInline: true,\n          autoPlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this);\n      } catch (error) {\n        return;\n      }\n    };\n\n    let a = await audioStream();\n    setAudio(a);\n  };\n\n  const createCall = call => {\n    call.on(\"stream\", async userVideoStream => {\n      let audioStream = async () => {\n        const audioTrack = createEmptyAudioTrack();\n        const streamNull = new MediaStream([audioTrack]);\n        let speechEvents = hark(userVideoStream, {});\n        speechEvents.on('speaking', function () {\n          setTalk(true);\n        });\n        speechEvents.on('stopped_speaking', function () {\n          setTalk(false);\n        });\n\n        try {\n          return /*#__PURE__*/_jsxDEV(\"audio\", {\n            playsInline: true,\n            muted: false,\n            ref: audio => audio ? audio.srcObject = userVideoStream : streamNull,\n            autoPlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 28\n          }, this); // eslint-disable-next-line no-unreachable\n        } catch (error) {\n          createNullStream();\n        }\n      };\n\n      let a = await audioStream();\n      setAudio(a);\n    });\n  };\n\n  const plus = (peer, stream) => {\n    // check if that peer is destroyed or not destroy that mean that was created before\n    if (peer.destroyed === false) {\n      // run normally\n      peer.on(\"call\", call => {\n        call.answer(stream);\n        createCall(call);\n      });\n      socket.on(\"user-connect\", value => {\n        if (value.idRoom === id) {\n          const call = peer.call(value.id, stream);\n          setUser(value.id);\n          createCall(call);\n        }\n      });\n    } else {\n      createNullStream();\n    }\n  }; // if we join another room then delete old peer connections \n\n\n  useEffect(() => {\n    let fnc = () => {\n      // socket.emit(\"chatVideo\", { idRoom: id, id: userId, g: null }, (callback) => {\n      //     setUser(callback)\n      // })\n      peerJS.on(\"open\", () => {\n        console.log(\"run\");\n        socket.emit(\"chatVideo\", {\n          idRoom: id,\n          id: userId,\n          g: null\n        }, callback => {\n          setUser(callback);\n        });\n      }); // get user media\n\n      navigator.mediaDevices.getUserMedia({\n        video: false,\n        audio: false\n      }).then(stream => {\n        plus(peerJS, stream);\n      }).catch(err => {\n        // if user does not accept to stream then create new null stream\n        const audioTrack = createEmptyAudioTrack();\n        const stream = new MediaStream([audioTrack]);\n        plus(peerJS, stream);\n      });\n    };\n\n    fnc(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  console.log(talk);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"call_div_container\",\n      children: [/*#__PURE__*/_jsxDEV(SimpleMenu, {\n        onClick: value => props.onClick(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_mic\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleOpenAccor,\n          className: accor === true ? \"accordion active\" : \"accordion\",\n          children: \"Voice Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: accor === true ? {\n            maxHeight: \"200px\"\n          } : {\n            maxHeight: null\n          },\n          className: \"panel\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_device\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"demom\",\n              src: \"../demo.jpeg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"icon_device\",\n              children: [audio, /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: e => handleSetMic(!mic),\n                children: mic === true ? /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 53\n                }, this) : /*#__PURE__*/_jsxDEV(MicOffIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 67\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: e => handleSetVolumn(),\n                children: volumn === false ? talk === true ? /*#__PURE__*/_jsxDEV(VolumeUpIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 73\n                }, this) : /*#__PURE__*/_jsxDEV(VolumeMuteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 92\n                }, this) : /*#__PURE__*/_jsxDEV(VolumeOffIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 113\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), audio ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user_device\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"avatar\",\n            style: talk === true ? {\n              border: \"2px solid rgba(46, 229, 157, 0.4)\"\n            } : {},\n            src: \"../demo.jpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon_device\",\n            children: [audio, /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: e => handleSetVolumn(),\n              children: volumn === false ? talk === true ? /*#__PURE__*/_jsxDEV(VolumeUpIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 73\n              }, this) : /*#__PURE__*/_jsxDEV(VolumeMuteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 92\n              }, this) : /*#__PURE__*/_jsxDEV(VolumeOffIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 113\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message_container_div\",\n      children: /*#__PURE__*/_jsxDEV(RenderChat, {\n        id: id,\n        userId: userId,\n        socket: socket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatCouple, \"f/NHdlO/ZP635NqFJmsipLY+xaE=\");\n\n_c = ChatCouple;\nexport default ChatCouple;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatCouple\");","map":{"version":3,"sources":["/home/dthai/sadness/a-client/src/component/chatComponent/miniChatCom/chatCouple.js"],"names":["React","useState","useEffect","getCookie","IconButton","VolumeMuteIcon","VolumeUpIcon","VolumeOffIcon","createEmptyAudioTrack","SimpleMenu","MicIcon","MicOffIcon","hark","RenderChat","ChatCouple","props","userId","token","id","peerJS","socket","audio","setAudio","mic","setMic","volumn","setVolumn","user","setUser","talk","setTalk","accor","setAccor","handleOpenAccor","handleSetVolumn","value","Object","assign","seleted","writeable","muted","old","handleSetMic","userMic","audioTrack","data","connections","sender","peerConnection","getSenders","replaceTrack","navigator","mediaDevices","getUserMedia","video","then","stream","getAudioTracks","catch","err","error","createNullStream","audioStream","streamNull","MediaStream","srcObject","a","createCall","call","on","userVideoStream","speechEvents","plus","peer","destroyed","answer","idRoom","fnc","console","log","emit","g","callback","onClick","maxHeight","e","border"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { getCookie } from '../../../helpers/auth';\nimport IconButton from '@material-ui/core/IconButton';\nimport \"../../../assets/style/call.css\"\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport { createEmptyAudioTrack } from '../../../helpers/message/audio';\nimport SimpleMenu from '../miniChatCom/simpleMenu';\nimport MicIcon from '@material-ui/icons/Mic';\nimport MicOffIcon from '@material-ui/icons/MicOff';\nimport hark from \"hark\"\nimport RenderChat from '../renderChat';\n\n// This function is use for send and view message\nfunction ChatCouple(props) {\n    const userId = getCookie().token;\n    const { id, peerJS, socket } = props;\n    const [audio, setAudio] = useState(null);\n    const [mic, setMic] = useState(false)\n    const [volumn, setVolumn] = useState(false)\n    const [user, setUser] = useState(null)\n    const [talk, setTalk] = useState(false)\n    const [accor, setAccor] = useState(false)\n\n    const handleOpenAccor = () => {\n        setAccor(!accor)\n    }\n\n    const handleSetVolumn = () => {\n        if (audio) {\n            setVolumn(!volumn)\n            let value = Object.assign({}, audio.props, { seleted: false, writeable: true })\n            value.muted = !volumn\n            delete value[\"seleted\"]\n            delete value[\"writeable\"]\n            let old = Object.assign({}, audio, { writeable: true, seleted: false })\n            old.props = value\n            delete old[\"seleted\"]\n            delete old[\"writeable\"]\n            setAudio(old)\n        }\n    }\n\n    const handleSetMic = () => {\n        // if value send from server is only one person return that else do another\n        let userMic = typeof user === \"string\" ? user : user[0] === userId ? user[1] : user[0]\n        try {\n            if (mic === true) {\n                const audioTrack = createEmptyAudioTrack();\n                let data = peerJS.connections\n                let sender = data[userMic][0].peerConnection.getSenders()[0]\n                sender.replaceTrack(audioTrack)\n            }\n            else {\n                navigator.mediaDevices.getUserMedia({ video: false, audio: true }).then(stream => {\n                    let data = peerJS.connections\n                    let sender = data[userMic][0].peerConnection.getSenders()[0]\n                    sender.replaceTrack(stream.getAudioTracks()[0])\n                }).catch(err => {\n                })\n            }\n        } catch (error) {\n        }\n        setMic(!mic)\n    }\n\n    let createNullStream = async () => {\n        let audioStream = async () => {\n            try {\n                const audioTrack = createEmptyAudioTrack();\n                const streamNull = new MediaStream([audioTrack]);\n                audioStream = (\n                    <audio muted={true} ref={audio => audio.srcObject = streamNull} playsInline autoPlay />\n                )\n            } catch (error) {\n                return\n            }\n        }\n        let a = await audioStream()\n        setAudio(a)\n    }\n\n    const createCall = (call) => {\n        call.on(\"stream\", async (userVideoStream) => {\n            let audioStream = async () => {\n                const audioTrack = createEmptyAudioTrack();\n                const streamNull = new MediaStream([audioTrack]);\n                let speechEvents = hark(userVideoStream, {})\n                speechEvents.on('speaking', function () {\n                    setTalk(true)\n                });\n                speechEvents.on('stopped_speaking', function () {\n                    setTalk(false)\n                });\n                try {\n                    return <audio playsInline muted={false} ref={audio => audio ? audio.srcObject = userVideoStream : streamNull\n                    } autoPlay />\n                    // eslint-disable-next-line no-unreachable\n                } catch (error) {\n                    createNullStream()\n                }\n            }\n            let a = await audioStream()\n            setAudio(a)\n        })\n    }\n\n    const plus = (peer, stream) => {\n        // check if that peer is destroyed or not destroy that mean that was created before\n        if (peer.destroyed === false) {\n            // run normally\n            peer.on(\"call\", call => {\n                call.answer(stream)\n                createCall(call)\n            })\n            socket.on(\"user-connect\", value => {\n                if (value.idRoom === id) {\n                    const call = peer.call(value.id, stream)\n                    setUser(value.id)\n                    createCall(call)\n                }\n            })\n        } else {\n            createNullStream()\n        }\n    }\n\n    // if we join another room then delete old peer connections \n\n    useEffect(() => {\n        let fnc = () => {\n            // socket.emit(\"chatVideo\", { idRoom: id, id: userId, g: null }, (callback) => {\n            //     setUser(callback)\n            // })\n\n            peerJS.on(\"open\", () => {\n                console.log(\"run\")\n                socket.emit(\"chatVideo\", { idRoom: id, id: userId, g: null }, (callback) => {\n                    setUser(callback)\n                })\n            })\n            // get user media\n            navigator.mediaDevices.getUserMedia({ video: false, audio: false }).then(stream => {\n                plus(peerJS, stream)\n            }).catch(err => {\n                // if user does not accept to stream then create new null stream\n                const audioTrack = createEmptyAudioTrack();\n                const stream = new MediaStream([audioTrack]);\n                plus(peerJS, stream)\n            })\n        };\n        fnc();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    console.log(talk)\n    return (\n        <div className=\"message_container\">\n            <div className=\"call_div_container\">\n                <SimpleMenu onClick={(value) => props.onClick(value)} />\n                <div className=\"main_mic\">\n                    <p onClick={handleOpenAccor} className={accor === true ? \"accordion active\" : \"accordion\"}>Voice Chat</p>\n                    <div style={accor === true ? { maxHeight: \"200px\" } : { maxHeight: null }} className=\"panel\">\n                        <div className=\"user_device\">\n                            <img\n                                alt=\"demom\"\n                                src=\"../demo.jpeg\"></img>\n                            <div className=\"icon_device\">\n                                {audio}\n                                <IconButton onClick={(e) => handleSetMic(!mic)}>\n                                    {mic === true ? <MicIcon /> : <MicOffIcon />}\n                                </IconButton>\n                                <IconButton onClick={(e) => handleSetVolumn()}>\n                                    {volumn === false ? talk === true ? <VolumeUpIcon /> : <VolumeMuteIcon /> : <VolumeOffIcon />}\n                                </IconButton>\n                            </div>\n                        </div>\n                    </div>\n                    {\n                        audio ? <div className=\"user_device\">\n                            <img\n                                alt=\"avatar\"\n                                style={talk === true ? { border: \"2px solid rgba(46, 229, 157, 0.4)\" } : {}}\n                                src=\"../demo.jpeg\"></img>\n                            <div className=\"icon_device\">\n                                {audio}\n                                <IconButton onClick={(e) => handleSetVolumn()}>\n                                    {volumn === false ? talk === true ? <VolumeUpIcon /> : <VolumeMuteIcon /> : <VolumeOffIcon />}\n                                </IconButton>\n                            </div>\n                        </div> : <></>\n                    }\n                </div>\n            </div>\n            <div className=\"message_container_div\">\n                <RenderChat id={id} userId={userId} socket={socket} />\n            </div>\n        </div >\n    )\n}\nexport default ChatCouple"]},"metadata":{},"sourceType":"module"}