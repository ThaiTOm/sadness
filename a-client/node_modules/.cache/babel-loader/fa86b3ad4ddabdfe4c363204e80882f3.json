{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/duythai/Developer/sadness/a-client/src/component/chatComponent/sendContact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getCookie } from '../../helpers/auth'; // This function is use for send and view message\n\nimport ChatCouple from \"./miniChatCom/chatCouple\";\nimport ChatGroup from './miniChatCom/chatGroup';\nimport Peer from \"peerjs\";\n\nfunction SendContact(props) {\n  _s();\n\n  const [peer, setPeer] = useState(null);\n  const userId = getCookie().token;\n\n  let newNull = () => {\n    peer.destroy();\n  };\n\n  useEffect(() => {\n    peer && newNull();\n    var peerJS = new Peer(userId, {\n      host: \"/\",\n      port: 2704,\n      path: \"/peerjs\"\n    });\n    console.log(peerJS);\n    setPeer(peerJS);\n  }, [props.id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: peer ? props.id[props.id.length - 1] === \"a\" ? /*#__PURE__*/_jsxDEV(ChatCouple, {\n      onClick: value => props.onClick(value),\n      peerJS: peer,\n      id: props.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(ChatGroup, {\n      onClick: value => props.onClick(value),\n      peerJS: peer,\n      id: props.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this) : console.log()\n  }, void 0, false);\n}\n\n_s(SendContact, \"u6VxUCaFRQjA4E7I8/puheusUmc=\");\n\n_c = SendContact;\nexport default SendContact;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendContact\");","map":{"version":3,"sources":["/home/duythai/Developer/sadness/a-client/src/component/chatComponent/sendContact.js"],"names":["React","useState","useEffect","getCookie","ChatCouple","ChatGroup","Peer","SendContact","props","peer","setPeer","userId","token","newNull","destroy","peerJS","host","port","path","console","log","id","length","value","onClick"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,oBAA1B,C,CACA;;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMU,MAAM,GAAGR,SAAS,GAAGS,KAA3B;;AAEA,MAAIC,OAAO,GAAG,MAAM;AAChBJ,IAAAA,IAAI,CAACK,OAAL;AACH,GAFD;;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,IAAI,IAAII,OAAO,EAAf;AACA,QAAIE,MAAM,GAAG,IAAIT,IAAJ,CAASK,MAAT,EAAiB;AAC1BK,MAAAA,IAAI,EAAE,GADoB;AAE1BC,MAAAA,IAAI,EAAE,IAFoB;AAG1BC,MAAAA,IAAI,EAAE;AAHoB,KAAjB,CAAb;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACAL,IAAAA,OAAO,CAACK,MAAD,CAAP;AACH,GATQ,EASN,CAACP,KAAK,CAACa,EAAP,CATM,CAAT;AAWA,sBACI;AAAA,cACKZ,IAAI,GACDD,KAAK,CAACa,EAAN,CAASb,KAAK,CAACa,EAAN,CAASC,MAAT,GAAkB,CAA3B,MAAkC,GAAlC,gBACI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAGC,KAAD,IAAWf,KAAK,CAACgB,OAAN,CAAcD,KAAd,CAAhC;AAAsD,MAAA,MAAM,EAAEd,IAA9D;AAAoE,MAAA,EAAE,EAAED,KAAK,CAACa;AAA9E;AAAA;AAAA;AAAA;AAAA,YADJ,gBAEI,QAAC,SAAD;AAAW,MAAA,OAAO,EAAGE,KAAD,IAAWf,KAAK,CAACgB,OAAN,CAAcD,KAAd,CAA/B;AAAqD,MAAA,MAAM,EAAEd,IAA7D;AAAmE,MAAA,EAAE,EAAED,KAAK,CAACa;AAA7E;AAAA;AAAA;AAAA;AAAA,YAHH,GAIDF,OAAO,CAACC,GAAR;AALR,mBADJ;AAUH;;GA5BQb,W;;KAAAA,W;AA8BT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { getCookie } from '../../helpers/auth';\n// This function is use for send and view message\nimport ChatCouple from \"./miniChatCom/chatCouple\"\nimport ChatGroup from './miniChatCom/chatGroup'\nimport Peer from \"peerjs\"\n\nfunction SendContact(props) {\n    const [peer, setPeer] = useState(null)\n    const userId = getCookie().token;\n\n    let newNull = () => {\n        peer.destroy()\n    }\n    useEffect(() => {\n        peer && newNull()\n        var peerJS = new Peer(userId, {\n            host: \"/\",\n            port: 2704,\n            path: \"/peerjs\"\n        })\n        console.log(peerJS)\n        setPeer(peerJS)\n    }, [props.id])\n\n    return (\n        <>\n            {peer ?\n                props.id[props.id.length - 1] === \"a\" ?\n                    <ChatCouple onClick={(value) => props.onClick(value)} peerJS={peer} id={props.id} /> :\n                    <ChatGroup onClick={(value) => props.onClick(value)} peerJS={peer} id={props.id} /> :\n                console.log()\n            }\n        </>\n    )\n}\n\nexport default SendContact"]},"metadata":{},"sourceType":"module"}