{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dthai/sadness/a-client/src/component/chatComponent/miniChatCom/chatGroup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getCookie } from '../../../helpers/auth';\nimport socketApp from '../../../socket';\nimport IconButton from '@material-ui/core/IconButton';\nimport \"../../../assets/style/call.css\";\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport { createEmptyAudioTrack } from '../../../helpers/message/audio';\nimport SimpleMenu from '../miniChatCom/simpleMenu';\nimport MicIcon from '@material-ui/icons/Mic';\nimport MicOffIcon from '@material-ui/icons/MicOff';\nimport hark from \"hark\";\nimport RenderChat from '../renderChat';\nimport { setMicOwn, setVolumnOwn } from '../../../helpers/main/PeerMany'; // This function is use for send and view message\n\nfunction ChatGroup(props) {\n  _s();\n\n  const userId = getCookie().token;\n  let socket = socketApp.getSocket();\n  const {\n    id,\n    peerJS\n  } = props;\n  const [audio, setAudio] = useState([]);\n  const [mic, setMic] = useState(false);\n  const [volumn, setVolumn] = useState(false);\n  const [oldPeer, setOldPeer] = useState(null);\n  const [talk, setTalk] = useState(false);\n  const [accor, setAccor] = useState(false);\n\n  const handleOpenAccor = () => {\n    setAccor(!accor);\n  }; // turn on or turn off own volumn\n\n\n  const handleSetVolumn = async () => {\n    // does any another user in the room\n    if (audio.length !== 0) {\n      setVolumn(!volumn);\n      let arr = await setVolumnOwn({\n        audio,\n        volumn\n      });\n      setAudio(arr);\n    }\n  }; // Turn on or turn off the own mic\n\n\n  const handleSetMic = () => {\n    setMic(!mic);\n    return setMicOwn({\n      mic,\n      oldPeer,\n      audio\n    });\n  };\n\n  const handleSetVolumnOther = (value, i) => {\n    // get id the user want to muted\n    let idMuted = Object.keys(oldPeer.connections)[i];\n    let sender = oldPeer.connections[idMuted][0].peerConnection.getSenders()[0] || [];\n\n    const returnAudio = (stream, streamNull) => {\n      let a = /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audio => audio ? audio.srcObject = stream : streamNull,\n        playsInline: true,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n\n      let obj = {\n        stream: a,\n        audio: false,\n        mic: true\n      };\n      let arr = [...audio];\n      arr[i] = obj;\n      setAudio(arr);\n    };\n\n    if (value.audio === true) {\n      let audioTrack = createEmptyAudioTrack();\n      sender.replaceTrack(audioTrack);\n      const streamNull = new MediaStream([audioTrack]);\n      returnAudio(streamNull, streamNull);\n    } else {\n      navigator.mediaDevices.getUserMedia({\n        video: false,\n        audio: true\n      }).then(stream => {\n        sender.replaceTrack(stream.getAudioTracks()[0]);\n        returnAudio(stream, createNullStream());\n      });\n    }\n  };\n\n  const handleSetMicOther = (data, i) => {\n    if (audio.length !== 0) {\n      // copy old object\n      let value = Object.assign({}, data.stream.props, {\n        seleted: false,\n        writeable: true\n      });\n      let old = Object.assign({}, data.stream, {\n        writeable: true,\n        seleted: false\n      });\n      value.muted = !volumn; // delete specific key\n\n      delete value[\"seleted\"];\n      delete value[\"writeable\"];\n      old.props = value;\n      delete old[\"seleted\"];\n      delete old[\"writeable\"]; // create new object\n      // to handle new data\n\n      let arr = [...audio];\n      let obj = {\n        stream: old,\n        audio: data.audio,\n        mic: false\n      };\n      arr[i] = obj;\n      setAudio(arr);\n    }\n  }; // create null stream to handle error \n\n\n  let createNullStream = () => {\n    let audioStream = () => {\n      try {\n        const audioTrack = createEmptyAudioTrack();\n        const streamNull = new MediaStream([audioTrack]);\n        return audioStream = /*#__PURE__*/_jsxDEV(\"audio\", {\n          muted: true,\n          ref: audio => audio.srcObject = streamNull,\n          playsInline: true,\n          autoPlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this);\n      } catch (error) {\n        return;\n      }\n    };\n\n    return audioStream();\n  }; // new user go to the room\n\n\n  const createCall = call => {\n    call.on(\"stream\", async userVideoStream => {\n      let audioStream = async () => {\n        const audioTrack = createEmptyAudioTrack();\n        const streamNull = new MediaStream([audioTrack]);\n\n        try {\n          let speechEvents = hark(userVideoStream, {});\n          speechEvents.on('speaking', function () {\n            setTalk(true);\n          });\n          speechEvents.on('stopped_speaking', function () {\n            setTalk(false);\n          });\n          return /*#__PURE__*/_jsxDEV(\"audio\", {\n            playsInline: true,\n            muted: false,\n            ref: audio => audio ? audio.srcObject = userVideoStream : streamNull,\n            autoPlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 28\n          }, this);\n        } catch (error) {\n          let a = createNullStream();\n          let obj = {\n            stream: a,\n            audio: false,\n            mic: false\n          };\n          setAudio(value => [...value, obj]);\n        }\n      };\n\n      let a = await audioStream();\n      let obj = {\n        stream: a,\n        audio: true,\n        mic: true\n      };\n      setAudio(value => [...value, obj]);\n    });\n  }; // fisrt route of connect peer to peer \n\n\n  const plus = (peer, stream) => {\n    // check if that peer is destroyed or not destroy that mean that was created before\n    if (peer.destroyed === false) {\n      // run normally\n      peer.on(\"call\", call => {\n        call.answer(stream);\n        createCall(call);\n      }); // recieve from server\n\n      socket.on(\"user-connect\", value => {\n        if (value.idRoom === id) {\n          const call = peer.call(value.id, stream);\n          createCall(call);\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    const fn = () => {\n      setOldPeer(peerJS);\n      peerJS.on(\"open\", () => {\n        socket.emit(\"chatVideo\", {\n          idRoom: id,\n          id: userId,\n          g: \"a\"\n        }, callback => {});\n      }); // get user media\n\n      navigator.mediaDevices.getUserMedia({\n        video: false,\n        audio: mic\n      }).then(stream => {\n        plus(peerJS, stream);\n      }).catch(err => {\n        // if user does not accept to stream then create new null stream\n        const audioTrack = createEmptyAudioTrack();\n        const stream = new MediaStream([audioTrack]);\n        plus(peerJS, stream);\n      });\n    };\n\n    fn(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message_container\",\n    children: [/*#__PURE__*/_jsxDEV(RenderChat, {\n      id: props.id,\n      userId: userId,\n      socket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"call_div_container\",\n      children: [/*#__PURE__*/_jsxDEV(SimpleMenu, {\n        onClick: value => props.onClick(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_user\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Th\\xE0nh vi\\xEAn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user_device\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_mic\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user_device\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"demom\",\n            style: talk === true ? {\n              border: \"2px solid rgba(46, 229, 157, 0.4)\"\n            } : {},\n            src: \"../demo.jpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon_device\",\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: e => handleSetMic(),\n              children: mic === true ? /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(MicOffIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: e => handleSetVolumn(),\n              children: volumn === false ? talk === true ? /*#__PURE__*/_jsxDEV(VolumeUpIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 69\n              }, this) : /*#__PURE__*/_jsxDEV(VolumeMuteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 88\n              }, this) : /*#__PURE__*/_jsxDEV(VolumeOffIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 109\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleOpenAccor,\n          className: accor === true ? \"accordion active\" : \"accordion\",\n          children: \"Voice Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: accor === true ? {\n            maxHeight: \"200px\"\n          } : {\n            maxHeight: null\n          },\n          className: \"panel\",\n          children: audio.length > 0 ? audio.map(function (value, i) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user_device\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"demom\",\n                style: talk === true ? {\n                  border: \"2px solid rgba(46, 229, 157, 0.4)\"\n                } : {},\n                src: \"../demo.jpeg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"icon_device\",\n                children: [value.stream, value.mic, /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: e => handleSetMicOther(value, i),\n                  children: value.mic === true ? /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 67\n                  }, this) : /*#__PURE__*/_jsxDEV(MicOffIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 81\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: e => handleSetVolumnOther(value, i),\n                  children: value.audio === true ? talk === true ? /*#__PURE__*/_jsxDEV(VolumeUpIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 85\n                  }, this) : /*#__PURE__*/_jsxDEV(VolumeMuteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 104\n                  }, this) : /*#__PURE__*/_jsxDEV(VolumeOffIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 125\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 37\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 40\n            }, this);\n          }) : console.log()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatGroup, \"UcX0Nvz9BO8EpNaxeEiBb5EnMQw=\");\n\n_c = ChatGroup;\nexport default ChatGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatGroup\");","map":{"version":3,"sources":["/home/dthai/sadness/a-client/src/component/chatComponent/miniChatCom/chatGroup.js"],"names":["React","useState","useEffect","getCookie","socketApp","IconButton","VolumeMuteIcon","VolumeUpIcon","VolumeOffIcon","createEmptyAudioTrack","SimpleMenu","MicIcon","MicOffIcon","hark","RenderChat","setMicOwn","setVolumnOwn","ChatGroup","props","userId","token","socket","getSocket","id","peerJS","audio","setAudio","mic","setMic","volumn","setVolumn","oldPeer","setOldPeer","talk","setTalk","accor","setAccor","handleOpenAccor","handleSetVolumn","length","arr","handleSetMic","handleSetVolumnOther","value","i","idMuted","Object","keys","connections","sender","peerConnection","getSenders","returnAudio","stream","streamNull","a","srcObject","obj","audioTrack","replaceTrack","MediaStream","navigator","mediaDevices","getUserMedia","video","then","getAudioTracks","createNullStream","handleSetMicOther","data","assign","seleted","writeable","old","muted","audioStream","error","createCall","call","on","userVideoStream","speechEvents","plus","peer","destroyed","answer","idRoom","fn","emit","g","callback","catch","err","onClick","border","e","maxHeight","map","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { getCookie } from '../../../helpers/auth';\nimport socketApp from '../../../socket';\nimport IconButton from '@material-ui/core/IconButton';\nimport \"../../../assets/style/call.css\"\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport { createEmptyAudioTrack } from '../../../helpers/message/audio';\nimport SimpleMenu from '../miniChatCom/simpleMenu';\nimport MicIcon from '@material-ui/icons/Mic';\nimport MicOffIcon from '@material-ui/icons/MicOff';\nimport hark from \"hark\"\nimport RenderChat from '../renderChat';\nimport { setMicOwn, setVolumnOwn } from '../../../helpers/main/PeerMany';\n\n// This function is use for send and view message\nfunction ChatGroup(props) {\n    const userId = getCookie().token;\n    let socket = socketApp.getSocket();\n    const { id, peerJS } = props;\n    const [audio, setAudio] = useState([]);\n    const [mic, setMic] = useState(false)\n    const [volumn, setVolumn] = useState(false)\n    const [oldPeer, setOldPeer] = useState(null)\n    const [talk, setTalk] = useState(false)\n    const [accor, setAccor] = useState(false)\n\n    const handleOpenAccor = () => {\n        setAccor(!accor)\n    }\n    // turn on or turn off own volumn\n    const handleSetVolumn = async () => {\n        // does any another user in the room\n        if (audio.length !== 0) {\n            setVolumn(!volumn)\n            let arr = await setVolumnOwn({ audio, volumn })\n            setAudio(arr)\n        }\n    }\n    // Turn on or turn off the own mic\n    const handleSetMic = () => {\n        setMic(!mic)\n        return setMicOwn({ mic, oldPeer, audio })\n    }\n\n    const handleSetVolumnOther = (value, i) => {\n        // get id the user want to muted\n        let idMuted = Object.keys(oldPeer.connections)[i]\n        let sender = oldPeer.connections[idMuted][0].peerConnection.getSenders()[0] || []\n        const returnAudio = (stream, streamNull) => {\n            let a = (\n                <audio ref={audio => audio ? audio.srcObject = stream : streamNull} playsInline autoPlay />\n            )\n            let obj = {\n                stream: a,\n                audio: false,\n                mic: true\n            }\n            let arr = [...audio]\n            arr[i] = obj\n            setAudio(arr)\n        }\n        if (value.audio === true) {\n            let audioTrack = createEmptyAudioTrack()\n            sender.replaceTrack(audioTrack)\n            const streamNull = new MediaStream([audioTrack]);\n            returnAudio(streamNull, streamNull)\n        } else {\n            navigator.mediaDevices.getUserMedia({ video: false, audio: true }).then(stream => {\n                sender.replaceTrack(stream.getAudioTracks()[0])\n                returnAudio(stream, createNullStream())\n            })\n        }\n    }\n    const handleSetMicOther = (data, i) => {\n        if (audio.length !== 0) {\n            // copy old object\n            let value = Object.assign({}, data.stream.props, { seleted: false, writeable: true })\n            let old = Object.assign({}, data.stream, { writeable: true, seleted: false })\n            value.muted = !volumn\n            // delete specific key\n            delete value[\"seleted\"]\n            delete value[\"writeable\"]\n            old.props = value\n            delete old[\"seleted\"]\n            delete old[\"writeable\"]\n            // create new object\n            // to handle new data\n            let arr = [...audio]\n            let obj = {\n                stream: old,\n                audio: data.audio,\n                mic: false\n            }\n            arr[i] = obj\n            setAudio(arr)\n        }\n    }\n    // create null stream to handle error \n    let createNullStream = () => {\n        let audioStream = () => {\n            try {\n                const audioTrack = createEmptyAudioTrack();\n                const streamNull = new MediaStream([audioTrack]);\n                return audioStream = (\n                    <audio muted={true} ref={audio => audio.srcObject = streamNull} playsInline autoPlay />\n                )\n            } catch (error) {\n                return\n            }\n        }\n        return audioStream()\n    }\n    // new user go to the room\n    const createCall = (call) => {\n        call.on(\"stream\", async (userVideoStream) => {\n            let audioStream = async () => {\n                const audioTrack = createEmptyAudioTrack();\n                const streamNull = new MediaStream([audioTrack]);\n                try {\n                    let speechEvents = hark(userVideoStream, {})\n                    speechEvents.on('speaking', function () {\n                        setTalk(true)\n                    });\n                    speechEvents.on('stopped_speaking', function () {\n                        setTalk(false)\n                    });\n                    return <audio playsInline muted={false} ref={audio => audio ? audio.srcObject = userVideoStream : streamNull} autoPlay />\n                } catch (error) {\n                    let a = createNullStream()\n                    let obj = {\n                        stream: a,\n                        audio: false,\n                        mic: false\n                    }\n                    setAudio(value => [...value, obj])\n                }\n            }\n            let a = await audioStream()\n            let obj = {\n                stream: a,\n                audio: true,\n                mic: true\n            }\n            setAudio(value => [...value, obj])\n        })\n    }\n    // fisrt route of connect peer to peer \n    const plus = (peer, stream) => {\n        // check if that peer is destroyed or not destroy that mean that was created before\n        if (peer.destroyed === false) {\n            // run normally\n            peer.on(\"call\", call => {\n                call.answer(stream)\n                createCall(call)\n            })\n            // recieve from server\n            socket.on(\"user-connect\", value => {\n                if (value.idRoom === id) {\n                    const call = peer.call(value.id, stream)\n                    createCall(call)\n                }\n            })\n        }\n    }\n\n    useEffect(() => {\n        const fn = () => {\n            setOldPeer(peerJS)\n            peerJS.on(\"open\", () => {\n                socket.emit(\"chatVideo\", { idRoom: id, id: userId, g: \"a\" }, (callback) => { })\n            })\n            // get user media\n            navigator.mediaDevices.getUserMedia({ video: false, audio: mic }).then(stream => {\n                plus(peerJS, stream)\n            }).catch(err => {\n                // if user does not accept to stream then create new null stream\n                const audioTrack = createEmptyAudioTrack();\n                const stream = new MediaStream([audioTrack]);\n                plus(peerJS, stream)\n            })\n        }\n        fn()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    return (\n        <div className=\"message_container\">\n            <RenderChat id={props.id} userId={userId} socket={socket} />\n            <div className=\"call_div_container\">\n                <SimpleMenu onClick={(value) => props.onClick(value)} />\n                <div className=\"main_user\">\n                    <p>Thành viên</p>\n                    <div className=\"user_device\">\n\n                    </div>\n                </div>\n                <div className=\"main_mic\">\n                    <div className=\"user_device\">\n                        <img\n                            alt=\"demom\"\n                            style={talk === true ? { border: \"2px solid rgba(46, 229, 157, 0.4)\" } : {}}\n                            src=\"../demo.jpeg\"></img>\n                        <div className=\"icon_device\">\n                            <IconButton onClick={(e) => handleSetMic()}>\n                                {mic === true ? <MicIcon /> : <MicOffIcon />}\n                            </IconButton>\n                            <IconButton onClick={(e) => handleSetVolumn()}>\n                                {volumn === false ? talk === true ? <VolumeUpIcon /> : <VolumeMuteIcon /> : <VolumeOffIcon />}\n                            </IconButton>\n                        </div>\n                    </div>\n                    <p onClick={handleOpenAccor} className={accor === true ? \"accordion active\" : \"accordion\"}>Voice Chat</p>\n                    <div style={accor === true ? { maxHeight: \"200px\" } : { maxHeight: null }} className=\"panel\">\n                        {\n                            audio.length > 0 ? audio.map(function (value, i) {\n                                return <div className=\"user_device\" key={i}>\n                                    <img\n                                        alt=\"demom\"\n                                        style={talk === true ? { border: \"2px solid rgba(46, 229, 157, 0.4)\" } : {}}\n                                        src=\"../demo.jpeg\"></img>\n                                    <div className=\"icon_device\">\n                                        {value.stream}\n                                        {value.mic}\n                                        <IconButton onClick={(e) => handleSetMicOther(value, i)}>\n                                            {value.mic === true ? <MicIcon /> : <MicOffIcon />}\n                                        </IconButton>\n                                        <IconButton onClick={(e) => handleSetVolumnOther(value, i)}>\n                                            {value.audio === true ? talk === true ? <VolumeUpIcon /> : <VolumeMuteIcon /> : <VolumeOffIcon />}\n                                        </IconButton>\n                                    </div>\n                                </div>\n                            }) : console.log()\n                        }\n                    </div>\n                </div>\n            </div>\n        </div >\n    )\n}\nexport default ChatGroup"]},"metadata":{},"sourceType":"module"}