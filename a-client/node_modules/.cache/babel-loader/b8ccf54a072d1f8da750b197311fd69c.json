{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dthai/sadness/a-client/src/helpers/message/audio.js\";\nexport const createEmptyAudioTrack = () => {\n  const ctx = new AudioContext();\n  const oscillator = ctx.createOscillator();\n  const dst = oscillator.connect(ctx.createMediaStreamDestination());\n  oscillator.start();\n  const track = dst.stream.getAudioTracks()[0];\n  return Object.assign(track, {\n    enabled: false\n  });\n};\nexport const createEmptyVideoTrack = ({\n  width,\n  height\n}) => {\n  const canvas = Object.assign(document.createElement('canvas'), {\n    width,\n    height\n  });\n  canvas.getContext('2d').fillRect(0, 0, width, height);\n  const stream = canvas.captureStream();\n  const track = stream.getVideoTracks()[0];\n  return Object.assign(track, {\n    enabled: false\n  });\n};\nexport const createNullStream = () => {\n  try {\n    const audioTrack = createEmptyAudioTrack();\n    const streamNull = new MediaStream([audioTrack]);\n    return /*#__PURE__*/_jsxDEV(\"audio\", {\n      muted: true,\n      ref: audio => audio.srcObject = streamNull,\n      playsInline: true,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  } catch (error) {\n    return;\n  }\n};","map":{"version":3,"sources":["/home/dthai/sadness/a-client/src/helpers/message/audio.js"],"names":["createEmptyAudioTrack","ctx","AudioContext","oscillator","createOscillator","dst","connect","createMediaStreamDestination","start","track","stream","getAudioTracks","Object","assign","enabled","createEmptyVideoTrack","width","height","canvas","document","createElement","getContext","fillRect","captureStream","getVideoTracks","createNullStream","audioTrack","streamNull","MediaStream","audio","srcObject","error"],"mappings":";;AAAA,OAAO,MAAMA,qBAAqB,GAAG,MAAM;AACvC,QAAMC,GAAG,GAAG,IAAIC,YAAJ,EAAZ;AACA,QAAMC,UAAU,GAAGF,GAAG,CAACG,gBAAJ,EAAnB;AACA,QAAMC,GAAG,GAAGF,UAAU,CAACG,OAAX,CAAmBL,GAAG,CAACM,4BAAJ,EAAnB,CAAZ;AACAJ,EAAAA,UAAU,CAACK,KAAX;AACA,QAAMC,KAAK,GAAGJ,GAAG,CAACK,MAAJ,CAAWC,cAAX,GAA4B,CAA5B,CAAd;AACA,SAAOC,MAAM,CAACC,MAAP,CAAcJ,KAAd,EAAqB;AAAEK,IAAAA,OAAO,EAAE;AAAX,GAArB,CAAP;AACH,CAPM;AASP,OAAO,MAAMC,qBAAqB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAuB;AACxD,QAAMC,MAAM,GAAGN,MAAM,CAACC,MAAP,CAAcM,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd,EAAgD;AAAEJ,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAhD,CAAf;AACAC,EAAAA,MAAM,CAACG,UAAP,CAAkB,IAAlB,EAAwBC,QAAxB,CAAiC,CAAjC,EAAoC,CAApC,EAAuCN,KAAvC,EAA8CC,MAA9C;AAEA,QAAMP,MAAM,GAAGQ,MAAM,CAACK,aAAP,EAAf;AACA,QAAMd,KAAK,GAAGC,MAAM,CAACc,cAAP,GAAwB,CAAxB,CAAd;AAEA,SAAOZ,MAAM,CAACC,MAAP,CAAcJ,KAAd,EAAqB;AAAEK,IAAAA,OAAO,EAAE;AAAX,GAArB,CAAP;AACH,CARM;AASP,OAAO,MAAMW,gBAAgB,GAAG,MAAM;AAClC,MAAI;AACA,UAAMC,UAAU,GAAG1B,qBAAqB,EAAxC;AACA,UAAM2B,UAAU,GAAG,IAAIC,WAAJ,CAAgB,CAACF,UAAD,CAAhB,CAAnB;AACA,wBAAO;AAAO,MAAA,KAAK,EAAE,IAAd;AAAoB,MAAA,GAAG,EAAEG,KAAK,IAAIA,KAAK,CAACC,SAAN,GAAkBH,UAApD;AAAgE,MAAA,WAAW,MAA3E;AAA4E,MAAA,QAAQ;AAApF;AAAA;AAAA;AAAA;AAAA,YAAP;AAEH,GALD,CAKE,OAAOI,KAAP,EAAc;AACZ;AACH;AACJ,CATM","sourcesContent":["export const createEmptyAudioTrack = () => {\n    const ctx = new AudioContext();\n    const oscillator = ctx.createOscillator();\n    const dst = oscillator.connect(ctx.createMediaStreamDestination());\n    oscillator.start();\n    const track = dst.stream.getAudioTracks()[0];\n    return Object.assign(track, { enabled: false });\n};\n\nexport const createEmptyVideoTrack = ({ width, height }) => {\n    const canvas = Object.assign(document.createElement('canvas'), { width, height });\n    canvas.getContext('2d').fillRect(0, 0, width, height);\n\n    const stream = canvas.captureStream();\n    const track = stream.getVideoTracks()[0];\n\n    return Object.assign(track, { enabled: false });\n};\nexport const createNullStream = () => {\n    try {\n        const audioTrack = createEmptyAudioTrack();\n        const streamNull = new MediaStream([audioTrack]);\n        return <audio muted={true} ref={audio => audio.srcObject = streamNull} playsInline autoPlay />\n\n    } catch (error) {\n        return\n    }\n}"]},"metadata":{},"sourceType":"module"}