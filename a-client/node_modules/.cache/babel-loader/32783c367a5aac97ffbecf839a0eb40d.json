{"ast":null,"code":"/*\nWildEmitter.js is a slim little event emitter by @henrikjoreteg largely based\non @visionmedia's Emitter from UI Kit.\n\nWhy? I wanted it standalone.\n\nI also wanted support for wildcard emitters like this:\n\nemitter.on('*', function (eventName, other, event, payloads) {\n\n});\n\nemitter.on('somenamespace*', function (eventName, payloads) {\n\n});\n\nPlease note that callbacks triggered by wildcard registered events also get\nthe event name as the first argument.\n*/\nmodule.exports = WildEmitter;\n\nfunction WildEmitter() {}\n\nWildEmitter.mixin = function (constructor) {\n  var prototype = constructor.prototype || constructor;\n  prototype.isWildEmitter = true; // Listen on the given `event` with `fn`. Store a group name if present.\n\n  prototype.on = function (event, groupName, fn) {\n    this.callbacks = this.callbacks || {};\n    var hasGroup = arguments.length === 3,\n        group = hasGroup ? arguments[1] : undefined,\n        func = hasGroup ? arguments[2] : arguments[1];\n    func._groupName = group;\n    (this.callbacks[event] = this.callbacks[event] || []).push(func);\n    return this;\n  }; // Adds an `event` listener that will be invoked a single\n  // time then automatically removed.\n\n\n  prototype.once = function (event, groupName, fn) {\n    var self = this,\n        hasGroup = arguments.length === 3,\n        group = hasGroup ? arguments[1] : undefined,\n        func = hasGroup ? arguments[2] : arguments[1];\n\n    function on() {\n      self.off(event, on);\n      func.apply(this, arguments);\n    }\n\n    this.on(event, group, on);\n    return this;\n  }; // Unbinds an entire group\n\n\n  prototype.releaseGroup = function (groupName) {\n    this.callbacks = this.callbacks || {};\n    var item, i, len, handlers;\n\n    for (item in this.callbacks) {\n      handlers = this.callbacks[item];\n\n      for (i = 0, len = handlers.length; i < len; i++) {\n        if (handlers[i]._groupName === groupName) {\n          //console.log('removing');\n          // remove it and shorten the array we're looping through\n          handlers.splice(i, 1);\n          i--;\n          len--;\n        }\n      }\n    }\n\n    return this;\n  }; // Remove the given callback for `event` or all\n  // registered callbacks.\n\n\n  prototype.off = function (event, fn) {\n    this.callbacks = this.callbacks || {};\n    var callbacks = this.callbacks[event],\n        i;\n    if (!callbacks) return this; // remove all handlers\n\n    if (arguments.length === 1) {\n      delete this.callbacks[event];\n      return this;\n    } // remove specific handler\n\n\n    i = callbacks.indexOf(fn);\n\n    if (i !== -1) {\n      callbacks.splice(i, 1);\n\n      if (callbacks.length === 0) {\n        delete this.callbacks[event];\n      }\n    }\n\n    return this;\n  }; /// Emit `event` with the given args.\n  // also calls any `*` handlers\n\n\n  prototype.emit = function (event) {\n    this.callbacks = this.callbacks || {};\n    var args = [].slice.call(arguments, 1),\n        callbacks = this.callbacks[event],\n        specialCallbacks = this.getWildcardCallbacks(event),\n        i,\n        len,\n        item,\n        listeners;\n\n    if (callbacks) {\n      listeners = callbacks.slice();\n\n      for (i = 0, len = listeners.length; i < len; ++i) {\n        if (!listeners[i]) {\n          break;\n        }\n\n        listeners[i].apply(this, args);\n      }\n    }\n\n    if (specialCallbacks) {\n      len = specialCallbacks.length;\n      listeners = specialCallbacks.slice();\n\n      for (i = 0, len = listeners.length; i < len; ++i) {\n        if (!listeners[i]) {\n          break;\n        }\n\n        listeners[i].apply(this, [event].concat(args));\n      }\n    }\n\n    return this;\n  }; // Helper for for finding special wildcard event handlers that match the event\n\n\n  prototype.getWildcardCallbacks = function (eventName) {\n    this.callbacks = this.callbacks || {};\n    var item,\n        split,\n        result = [];\n\n    for (item in this.callbacks) {\n      split = item.split('*');\n\n      if (item === '*' || split.length === 2 && eventName.slice(0, split[0].length) === split[0]) {\n        result = result.concat(this.callbacks[item]);\n      }\n    }\n\n    return result;\n  };\n};\n\nWildEmitter.mixin(WildEmitter);","map":{"version":3,"sources":["/home/dthai/sadness/a-client/node_modules/wildemitter/wildemitter.js"],"names":["module","exports","WildEmitter","mixin","constructor","prototype","isWildEmitter","on","event","groupName","fn","callbacks","hasGroup","arguments","length","group","undefined","func","_groupName","push","once","self","off","apply","releaseGroup","item","i","len","handlers","splice","indexOf","emit","args","slice","call","specialCallbacks","getWildcardCallbacks","listeners","concat","eventName","split","result"],"mappings":"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","sourcesContent":["/*\nWildEmitter.js is a slim little event emitter by @henrikjoreteg largely based\non @visionmedia's Emitter from UI Kit.\n\nWhy? I wanted it standalone.\n\nI also wanted support for wildcard emitters like this:\n\nemitter.on('*', function (eventName, other, event, payloads) {\n\n});\n\nemitter.on('somenamespace*', function (eventName, payloads) {\n\n});\n\nPlease note that callbacks triggered by wildcard registered events also get\nthe event name as the first argument.\n*/\n\nmodule.exports = WildEmitter;\n\nfunction WildEmitter() { }\n\nWildEmitter.mixin = function (constructor) {\n    var prototype = constructor.prototype || constructor;\n\n    prototype.isWildEmitter= true;\n\n    // Listen on the given `event` with `fn`. Store a group name if present.\n    prototype.on = function (event, groupName, fn) {\n        this.callbacks = this.callbacks || {};\n        var hasGroup = (arguments.length === 3),\n            group = hasGroup ? arguments[1] : undefined,\n            func = hasGroup ? arguments[2] : arguments[1];\n        func._groupName = group;\n        (this.callbacks[event] = this.callbacks[event] || []).push(func);\n        return this;\n    };\n\n    // Adds an `event` listener that will be invoked a single\n    // time then automatically removed.\n    prototype.once = function (event, groupName, fn) {\n        var self = this,\n            hasGroup = (arguments.length === 3),\n            group = hasGroup ? arguments[1] : undefined,\n            func = hasGroup ? arguments[2] : arguments[1];\n        function on() {\n            self.off(event, on);\n            func.apply(this, arguments);\n        }\n        this.on(event, group, on);\n        return this;\n    };\n\n    // Unbinds an entire group\n    prototype.releaseGroup = function (groupName) {\n        this.callbacks = this.callbacks || {};\n        var item, i, len, handlers;\n        for (item in this.callbacks) {\n            handlers = this.callbacks[item];\n            for (i = 0, len = handlers.length; i < len; i++) {\n                if (handlers[i]._groupName === groupName) {\n                    //console.log('removing');\n                    // remove it and shorten the array we're looping through\n                    handlers.splice(i, 1);\n                    i--;\n                    len--;\n                }\n            }\n        }\n        return this;\n    };\n\n    // Remove the given callback for `event` or all\n    // registered callbacks.\n    prototype.off = function (event, fn) {\n        this.callbacks = this.callbacks || {};\n        var callbacks = this.callbacks[event],\n            i;\n\n        if (!callbacks) return this;\n\n        // remove all handlers\n        if (arguments.length === 1) {\n            delete this.callbacks[event];\n            return this;\n        }\n\n        // remove specific handler\n        i = callbacks.indexOf(fn);\n        if (i !== -1) {\n            callbacks.splice(i, 1);\n            if (callbacks.length === 0) {\n                delete this.callbacks[event];\n            }\n        }\n        return this;\n    };\n\n    /// Emit `event` with the given args.\n    // also calls any `*` handlers\n    prototype.emit = function (event) {\n        this.callbacks = this.callbacks || {};\n        var args = [].slice.call(arguments, 1),\n            callbacks = this.callbacks[event],\n            specialCallbacks = this.getWildcardCallbacks(event),\n            i,\n            len,\n            item,\n            listeners;\n\n        if (callbacks) {\n            listeners = callbacks.slice();\n            for (i = 0, len = listeners.length; i < len; ++i) {\n                if (!listeners[i]) {\n                    break;\n                }\n                listeners[i].apply(this, args);\n            }\n        }\n\n        if (specialCallbacks) {\n            len = specialCallbacks.length;\n            listeners = specialCallbacks.slice();\n            for (i = 0, len = listeners.length; i < len; ++i) {\n                if (!listeners[i]) {\n                    break;\n                }\n                listeners[i].apply(this, [event].concat(args));\n            }\n        }\n\n        return this;\n    };\n\n    // Helper for for finding special wildcard event handlers that match the event\n    prototype.getWildcardCallbacks = function (eventName) {\n        this.callbacks = this.callbacks || {};\n        var item,\n            split,\n            result = [];\n\n        for (item in this.callbacks) {\n            split = item.split('*');\n            if (item === '*' || (split.length === 2 && eventName.slice(0, split[0].length) === split[0])) {\n                result = result.concat(this.callbacks[item]);\n            }\n        }\n        return result;\n    };\n\n};\n\nWildEmitter.mixin(WildEmitter);\n"]},"metadata":{},"sourceType":"script"}