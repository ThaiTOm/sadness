{"ast":null,"code":"let db;\nlet dbReq = indexedDB.open('myDatabase', 3);\n\ndbReq.onupgradeneeded = function (event) {\n  // Set the db variable to our database so we can use it!  \n  db = event.target.result; // Create an object store named notes. Object stores\n  // in databases are where data are stored.\n\n  let notes = db.createObjectStore('app-view-story', {\n    autoIncrement: true,\n    keyPath: \"id\"\n  });\n\n  notes.onerror = e => {\n    db.deleteObjectStore(\"app-view-story\");\n    db.createObjectStore('app-view-story', {\n      autoIncrement: true,\n      keyPath: \"id\"\n    });\n  };\n};\n\ndbReq.onsuccess = function (event) {\n  db = event.target.result;\n};\n\ndbReq.onerror = function (event) {\n  alert('error opening database ' + event.target.errorCode);\n};\n\nexport const addData = (id, value) => {\n  let tx = db.transaction(['notes'], 'readwrite');\n  let store = tx.objectStore('notes');\n  let req = store.add(value);\n\n  req.onsuccess = e => {\n    console.log(\"succesFull\");\n  };\n\n  req.onerror = e => {\n    console.log(\"failure\");\n  };\n};","map":{"version":3,"sources":["/home/dthai/sadness/a-client/src/helpers/indexeddb.js"],"names":["db","dbReq","indexedDB","open","onupgradeneeded","event","target","result","notes","createObjectStore","autoIncrement","keyPath","onerror","e","deleteObjectStore","onsuccess","alert","errorCode","addData","id","value","tx","transaction","store","objectStore","req","add","console","log"],"mappings":"AAAA,IAAIA,EAAJ;AACA,IAAIC,KAAK,GAAGC,SAAS,CAACC,IAAV,CAAe,YAAf,EAA6B,CAA7B,CAAZ;;AAGAF,KAAK,CAACG,eAAN,GAAwB,UAAUC,KAAV,EAAiB;AACrC;AACAL,EAAAA,EAAE,GAAGK,KAAK,CAACC,MAAN,CAAaC,MAAlB,CAFqC,CAIrC;AACA;;AACA,MAAIC,KAAK,GAAGR,EAAE,CAACS,iBAAH,CAAqB,gBAArB,EAAuC;AAAEC,IAAAA,aAAa,EAAE,IAAjB;AAAuBC,IAAAA,OAAO,EAAE;AAAhC,GAAvC,CAAZ;;AACAH,EAAAA,KAAK,CAACI,OAAN,GAAiBC,CAAD,IAAO;AACnBb,IAAAA,EAAE,CAACc,iBAAH,CAAqB,gBAArB;AACAd,IAAAA,EAAE,CAACS,iBAAH,CAAqB,gBAArB,EAAuC;AAAEC,MAAAA,aAAa,EAAE,IAAjB;AAAuBC,MAAAA,OAAO,EAAE;AAAhC,KAAvC;AACH,GAHD;AAIH,CAXD;;AAYAV,KAAK,CAACc,SAAN,GAAkB,UAAUV,KAAV,EAAiB;AAC/BL,EAAAA,EAAE,GAAGK,KAAK,CAACC,MAAN,CAAaC,MAAlB;AACH,CAFD;;AAIAN,KAAK,CAACW,OAAN,GAAgB,UAAUP,KAAV,EAAiB;AAC7BW,EAAAA,KAAK,CAAC,4BAA4BX,KAAK,CAACC,MAAN,CAAaW,SAA1C,CAAL;AACH,CAFD;;AAGA,OAAO,MAAMC,OAAO,GAAG,CAACC,EAAD,EAAKC,KAAL,KAAe;AAClC,MAAIC,EAAE,GAAGrB,EAAE,CAACsB,WAAH,CAAe,CAAC,OAAD,CAAf,EAA0B,WAA1B,CAAT;AACA,MAAIC,KAAK,GAAGF,EAAE,CAACG,WAAH,CAAe,OAAf,CAAZ;AACA,MAAIC,GAAG,GAAGF,KAAK,CAACG,GAAN,CAAUN,KAAV,CAAV;;AACAK,EAAAA,GAAG,CAACV,SAAJ,GAAiBF,CAAD,IAAO;AACnBc,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,GAFD;;AAGAH,EAAAA,GAAG,CAACb,OAAJ,GAAeC,CAAD,IAAO;AACjBc,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,GAFD;AAGH,CAVM","sourcesContent":["let db;\nlet dbReq = indexedDB.open('myDatabase', 3);\n\n\ndbReq.onupgradeneeded = function (event) {\n    // Set the db variable to our database so we can use it!  \n    db = event.target.result;\n\n    // Create an object store named notes. Object stores\n    // in databases are where data are stored.\n    let notes = db.createObjectStore('app-view-story', { autoIncrement: true, keyPath: \"id\" });\n    notes.onerror = (e) => {\n        db.deleteObjectStore(\"app-view-story\")\n        db.createObjectStore('app-view-story', { autoIncrement: true, keyPath: \"id\" });\n    }\n}\ndbReq.onsuccess = function (event) {\n    db = event.target.result;\n}\n\ndbReq.onerror = function (event) {\n    alert('error opening database ' + event.target.errorCode);\n}\nexport const addData = (id, value) => {\n    let tx = db.transaction(['notes'], 'readwrite');\n    let store = tx.objectStore('notes');\n    let req = store.add(value)\n    req.onsuccess = (e) => {\n        console.log(\"succesFull\")\n    }\n    req.onerror = (e) => {\n        console.log(\"failure\")\n    }\n}"]},"metadata":{},"sourceType":"module"}